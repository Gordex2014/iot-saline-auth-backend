{"version":3,"sources":["./src/app/protected/routes/protected.routes.ts","./src/app/protected/services/token-header.service.ts","./src/app/protected/services/users-requests.service.ts","./src/app/shared/services/toastr.service.ts"],"names":[],"mappings":"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","file":"common-es2015.js","sourcesContent":["export const dashboardRoutes = {\r\n  main: '/home/dashboard',\r\n};\r\n\r\nexport const adminsRoutes = {\r\n  main: '/home/admins',\r\n  registration: '/home/admins/register',\r\n  viewAll: '/home/admins/view-all-admins',\r\n};\r\n\r\nexport const doctorsRoutes = {\r\n  main: '/home/doctors',\r\n  registration: '/home/doctors/register',\r\n  viewAll: '/home/doctors/view-all-doctors',\r\n};\r\n\r\nexport const patientsRoutes = {\r\n  main: '/home/patients',\r\n  registration: '/home/patients/register',\r\n  viewAll: '/home/patients/view-all-patients',\r\n  addRecords: '/home/patients/add-patients-records',\r\n  editPatientBase: '/home/patients/edit',\r\n  addSinglePatientRecordBase: '/home/patients/add-patient-record',\r\n  editSinglePatientRecordBase: '/home/patients/edit-patient-record',\r\n  viewSinglePatientRecordBase: '/home/patients/view-patient-record',\r\n  viewPatientHistoryBase: '/home/patients/patient-history',\r\n};\r\n\r\nexport const roomsRoutes = {\r\n  main: '/home/rooms',\r\n  registration: '/home/rooms/register',\r\n  inspect: '/home/rooms/view-all-rooms',\r\n};\r\n\r\nexport const bedsRoutes = {\r\n  main: '/home/beds',\r\n  registration: '/home/beds/register',\r\n  inspect: '/home/beds/view-all-beds',\r\n};\r\n\r\nexport const devicesRoutes = {\r\n  main: '/home/devices',\r\n  registration: '/home/devices/register',\r\n  inspect: '/home/devices/view-all-devices',\r\n};\r\n","import { HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TokenHeaderService {\n  constructor() {}\n\n  get xTokenHeader(): HttpHeaders {\n    return new HttpHeaders({\n      'x-token': this.accessToken,\n    });\n  }\n\n  get accessToken(): string {\n    return localStorage.getItem('token') || '';\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { environment } from 'environments/environment';\nimport { TokenHeaderService } from './token-header.service';\n\nimport { GetUserByIDResponse } from 'app/protected/interfaces/user/responses/GetUserByIdResponse.interface';\nimport { ListUsersResponse } from 'app/protected/interfaces/user/responses/ListUsersResponse.interface';\nimport { UserCreationResponse } from 'app/protected/interfaces/user/responses/UserCreationResponse.interface';\nimport { UserModificationResponse } from 'app/protected/interfaces/user/responses/UserModificationResponse.interface';\nimport { UserCreation } from 'app/protected/interfaces/user/User.interface';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UsersRequestsService {\n  private baseUrl = environment.baseUrl;\n\n  constructor(\n    private http: HttpClient,\n    private tokenService: TokenHeaderService,\n  ) {}\n\n  listDoctors(filter?: string): Observable<ListUsersResponse> {\n    let url = this.baseUrl + '/users/doctors';\n    if (filter) url += `?filter=${filter}`;\n    return this.http.get<ListUsersResponse>(url, {\n      headers: this.tokenService.xTokenHeader,\n    });\n  }\n\n  listAdmins(filter?: string): Observable<ListUsersResponse> {\n    let url = this.baseUrl + '/users/admins';\n    if (filter) url += `?filter=${filter}`;\n    return this.http.get<ListUsersResponse>(url, {\n      headers: this.tokenService.xTokenHeader,\n    });\n  }\n\n  getDoctorById(id: string): Observable<GetUserByIDResponse> {\n    const url = this.baseUrl + `/users/doctors/${id}`;\n    return this.http.get<GetUserByIDResponse>(url, {\n      headers: this.tokenService.xTokenHeader,\n    });\n  }\n\n  getAdminById(id: string): Observable<GetUserByIDResponse> {\n    const url = this.baseUrl + `/users/admins/${id}`;\n    return this.http.get<GetUserByIDResponse>(url, {\n      headers: this.tokenService.xTokenHeader,\n    });\n  }\n\n  createDoctor(newDoctor: UserCreation): Observable<UserCreationResponse> {\n    const url = this.baseUrl + '/users';\n\n    const newDoctorData = {\n      firstName: newDoctor.firstName,\n      lastName: newDoctor.lastName,\n      email: newDoctor.email,\n      mobileNumber: newDoctor.mobileNumber,\n      username: newDoctor.username,\n      password: newDoctor.password,\n      roles: ['USER_DOCTOR_ROLE'],\n      ...(newDoctor.imageURI && { imageURI: newDoctor.imageURI }),\n    };\n\n    return this.http.post<UserCreationResponse>(url, newDoctorData, {\n      headers: this.tokenService.xTokenHeader,\n    });\n  }\n\n  createAdmin(newAdmin: UserCreation): Observable<UserCreationResponse> {\n    const url = this.baseUrl + '/users';\n\n    const newAdminData = {\n      firstName: newAdmin.firstName,\n      lastName: newAdmin.lastName,\n      email: newAdmin.email,\n      mobileNumber: newAdmin.mobileNumber,\n      username: newAdmin.username,\n      password: newAdmin.password,\n      roles: ['USER_ADMIN_ROLE'],\n      ...(newAdmin.imageURI && { imageURI: newAdmin.imageURI }),\n    };\n\n    return this.http.post<UserCreationResponse>(url, newAdminData, {\n      headers: this.tokenService.xTokenHeader,\n    });\n  }\n\n  modifyUser(user: UserCreation): Observable<UserModificationResponse> {\n    const url = this.baseUrl + `/users/${user.id}`;\n\n    const userModifiedData = {\n      firstName: user.firstName,\n      lastName: user.lastName,\n      email: user.email,\n      mobileNumber: user.mobileNumber,\n      username: user.username,\n      ...(user.password && { password: user.password }),\n      ...(user.imageURI && { imageURI: user.imageURI }),\n    };\n\n    return this.http.put<UserModificationResponse>(url, userModifiedData, {\n      headers: this.tokenService.xTokenHeader,\n    });\n  }\n\n  deleteDoctor(doctorId: string): Observable<UserModificationResponse> {\n    const url = this.baseUrl + `/users/doctors/${doctorId}`;\n    return this.http.delete<UserModificationResponse>(url, {\n      headers: this.tokenService.xTokenHeader,\n    });\n  }\n\n  deleteAdmin(adminId: string): Observable<UserModificationResponse> {\n    const url = this.baseUrl + `/users/admins/${adminId}`;\n    return this.http.delete<UserModificationResponse>(url, {\n      headers: this.tokenService.xTokenHeader,\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { NbGlobalPhysicalPosition, NbToastrService } from '@nebular/theme';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ToastrService {\n  constructor(private nbToastrService: NbToastrService) {}\n\n  errorToastr(errorMessage: string): void {\n    this.nbToastrService.show(errorMessage, 'Error', {\n      status: 'danger',\n      position: NbGlobalPhysicalPosition.TOP_RIGHT,\n      duration: 6000,\n      hasIcon: true,\n    });\n  }\n\n  successToastr(toastrTitle: string, successMessage: string): void {\n    this.nbToastrService.show(successMessage, toastrTitle, {\n      status: 'success',\n      position: NbGlobalPhysicalPosition.TOP_RIGHT,\n      duration: 6000,\n      hasIcon: true,\n    });\n  }\n}\n"],"sourceRoot":"webpack:///"}