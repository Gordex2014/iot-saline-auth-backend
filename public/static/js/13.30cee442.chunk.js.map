{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","hooks/useForm.js","assets/images/ucb-logo.png","views/pages/login/Login.js"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","useForm","initialState","useState","values","setValues","reset","handleInputChange","target","name","Login","dispatch","useDispatch","useSelector","state","ui","msgError","loading","credential","password","formValues","login","isFormValid","startLogin","trim","setError","removeError","className","md","autoComplete","color","type","placeholder","onChange","onKeyDown","e","key","preventDefault","stopPropagation","xs","onClick","disabled","style","width","src","ucbLogo","alt"],"mappings":"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","file":"static/js/13.30cee442.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import { useState } from \"react\";\r\n\r\nexport const useForm = (initialState = {}) => {\r\n  const [values, setValues] = useState(initialState);\r\n\r\n  const reset = () => {\r\n    setValues(initialState);\r\n  };\r\n\r\n  const handleInputChange = ({ target }) => {\r\n    setValues({\r\n      ...values,\r\n      [target.name]: target.value,\r\n    });\r\n  };\r\n\r\n  return [values, handleInputChange, reset];\r\n};\r\n","export default __webpack_public_path__ + \"static/media/ucb-logo.f68e889c.png\";","import CIcon from \"@coreui/icons-react\";\r\nimport {\r\n  CAlert,\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardGroup,\r\n  CCol,\r\n  CContainer,\r\n  CForm,\r\n  CInput,\r\n  CInputGroup,\r\n  CInputGroupPrepend,\r\n  CInputGroupText,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { startLogin } from \"src/actions/auth\";\r\nimport { removeError, setError } from \"src/actions/ui\";\r\nimport ucbLogo from \"src/assets/images/ucb-logo.png\";\r\nimport { useForm } from \"src/hooks/useForm\";\r\n\r\nconst Login = () => {\r\n  const dispatch = useDispatch();\r\n  const { msgError, loading } = useSelector((state) => state.ui);\r\n\r\n  const [formValues, handleInputChange] = useForm({\r\n    credential: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const { credential, password } = formValues;\r\n\r\n  const handleLoginButton = (e) => {\r\n    e.preventDefault();\r\n    login();\r\n  };\r\n\r\n  const onKeyDown = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n      login();\r\n    }\r\n  };\r\n\r\n  const login = () => {\r\n    if (isFormValid()) {\r\n      dispatch(startLogin(credential, password));\r\n    }\r\n  };\r\n\r\n  const isFormValid = () => {\r\n    if (credential.trim().length === 0) {\r\n      dispatch(setError(\"El nombre de usuario o correo es requerido\"));\r\n      return false;\r\n    } else if (password.length < 6) {\r\n      dispatch(setError(\"La contraseña debe ser de al menos 6 caracteres\"));\r\n      return false;\r\n    }\r\n    dispatch(removeError());\r\n    return true;\r\n  };\r\n\r\n  return (\r\n    <div className=\"c-app c-default-layout flex-row align-items-center\">\r\n      <CContainer>\r\n        <CRow className=\"justify-content-center\">\r\n          <CCol md=\"8\">\r\n            <CCardGroup>\r\n              <CCard className=\"p-4\">\r\n                <CCardBody>\r\n                  <CForm autoComplete=\"off\">\r\n                    <h1>Acceso</h1>\r\n                    <p className=\"text-muted\">Inicie sesión en su cuenta</p>\r\n                    {msgError && <CAlert color=\"danger\">{msgError}</CAlert>}\r\n                    <CInputGroup className=\"mb-3\">\r\n                      <CInputGroupPrepend>\r\n                        <CInputGroupText>\r\n                          <CIcon name=\"cil-user\" />\r\n                        </CInputGroupText>\r\n                      </CInputGroupPrepend>\r\n                      <CInput\r\n                        type=\"text\"\r\n                        placeholder=\"Nombre de usuario o correo\"\r\n                        autoComplete=\"off\"\r\n                        name=\"credential\"\r\n                        value={credential}\r\n                        onChange={handleInputChange}\r\n                      />\r\n                    </CInputGroup>\r\n                    <CInputGroup className=\"mb-4\">\r\n                      <CInputGroupPrepend>\r\n                        <CInputGroupText>\r\n                          <CIcon name=\"cil-lock-locked\" />\r\n                        </CInputGroupText>\r\n                      </CInputGroupPrepend>\r\n                      <CInput\r\n                        type=\"password\"\r\n                        placeholder=\"Contraseña\"\r\n                        autoComplete=\"off\"\r\n                        name=\"password\"\r\n                        value={password}\r\n                        onChange={handleInputChange}\r\n                        onKeyDown={onKeyDown}\r\n                      />\r\n                    </CInputGroup>\r\n                    <CRow>\r\n                      <CCol xs=\"6\">\r\n                        <CButton\r\n                          color=\"info\"\r\n                          className=\"px-4\"\r\n                          onClick={handleLoginButton}\r\n                          disabled={loading}\r\n                        >\r\n                          Acceso\r\n                        </CButton>\r\n                      </CCol>\r\n                      <CCol xs=\"6\" className=\"text-right\">\r\n                        <CButton color=\"link\" className=\"px-0\">\r\n                          Forgot password?\r\n                        </CButton>\r\n                      </CCol>\r\n                    </CRow>\r\n                  </CForm>\r\n                </CCardBody>\r\n              </CCard>\r\n              <CCard\r\n                className=\"text-white bg-info py-5 d-md-down-none\"\r\n                style={{ width: \"44%\" }}\r\n              >\r\n                <CCardBody className=\"text-center\">\r\n                  <div>\r\n                    <h2>IoT Saline</h2>\r\n                    <p>\r\n                      Lorem ipsum dolor sit amet, consectetur adipisicing elit,\r\n                      sed do eiusmod tempor incididunt ut labore et dolore magna\r\n                      aliqua.\r\n                    </p>\r\n                    <img src={ucbLogo} width=\"90%\" alt=\"ucb logo\" />\r\n                  </div>\r\n                </CCardBody>\r\n              </CCard>\r\n            </CCardGroup>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"sourceRoot":""}