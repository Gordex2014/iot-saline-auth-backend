{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","views/doctors/DoctorDetails.jsx"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","DoctorDetails","match","history","userId","useSelector","state","auth","id","useState","formError","setFormError","success","setSuccess","danger","setDanger","user","setUser","fixedUser","setFixedUser","params","useEffect","ac","AbortController","a","fetchWithToken","then","response","json","data","body","catch","error","console","log","fetchUser","abort","handleInputChange","target","name","handleUserModification","password","password2","email","firstName","lastName","mobileNumber","username","status","handleUserElimination","Fragment","xs","sm","md","color","className","src","imageUrl","defaultUser","shape","fluid","width","align","htmlFor","placeholder","defaultValue","onChange","autoComplete","type","size","onClick","show","onClose","closeButton"],"mappings":"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","file":"static/js/48.d4e6683e.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import CIcon from \"@coreui/icons-react\";\r\nimport {\r\n  CAlert,\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardFooter,\r\n  CCardHeader,\r\n  CCol,\r\n  CFormGroup,\r\n  CFormText,\r\n  CImg,\r\n  CInput,\r\n  CLabel,\r\n  CModal,\r\n  CModalBody,\r\n  CModalFooter,\r\n  CModalHeader,\r\n  CModalTitle,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport defaultUser from \"src/assets/images/default-user.jpg\";\r\nimport { fetchWithToken } from \"src/helpers/fetch\";\r\n\r\nconst DoctorDetails = ({ match, history }) => {\r\n  const { id: userId } = useSelector((state) => state.auth);\r\n  const [formError, setFormError] = useState(\"\");\r\n  const [success, setSuccess] = useState(false);\r\n  const [danger, setDanger] = useState(false);\r\n  const [user, setUser] = useState({});\r\n  const [fixedUser, setFixedUser] = useState({});\r\n  const { id } = match.params;\r\n\r\n  useEffect(() => {\r\n    const ac = new AbortController();\r\n    const fetchUser = async () =>\r\n      fetchWithToken(`users/doctors/${id}`)\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          setUser(data.body);\r\n          setFixedUser(data.body);\r\n        })\r\n        .catch((error) => console.log(error));\r\n    fetchUser();\r\n    return () => ac.abort();\r\n  }, [id]);\r\n\r\n  const handleInputChange = ({ target }) => {\r\n    setUser({\r\n      ...user,\r\n      [target.name]: target.value,\r\n    });\r\n  };\r\n\r\n  const isFormValid = () => {\r\n    if (user.password !== user.password2) {\r\n      setFormError(\"Las contraseÃ±as deben de ser iguales\");\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const handleUserModification = async () => {\r\n    if (isFormValid()) {\r\n      const response = await fetchWithToken(\r\n        `users/${id}`,\r\n        {\r\n          ...(user.email && { email: user.email }),\r\n          ...(user.firstName && { firstName: user.firstName }),\r\n          ...(user.lastName && { lastName: user.lastName }),\r\n          ...(user.mobileNumber && { mobileNumber: user.mobileNumber }),\r\n          ...(user.password && { password: user.password }),\r\n          ...(user.username && { username: user.username }),\r\n        },\r\n        \"PUT\"\r\n      );\r\n      if (response.status === 204) {\r\n        setFormError(\"\");\r\n        setSuccess(true);\r\n      } else {\r\n        const { error } = await response.json();\r\n        setFormError(error);\r\n        return;\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleUserElimination = async () => {\r\n    const response = await fetchWithToken(`users/doctors/${id}`, {}, \"DELETE\");\r\n    if (response.status === 204) {\r\n      setDanger(false);\r\n      history.push(\"/doctors/view-all-doctors\");\r\n    }\r\n    setDanger(false);\r\n    return;\r\n  };\r\n\r\n  const deletionValid = () => {\r\n    if (id === userId) {\r\n      setFormError(\"No puede eliminar su propia cuenta\");\r\n      return;\r\n    }\r\n    setDanger(true);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <CRow>\r\n        <CCol xs=\"12\" sm=\"12\" md=\"5\">\r\n          <CCard color=\"gradient-secondary\">\r\n            <CCardBody className=\"text-center\">\r\n              <CImg\r\n                src={user.imageUrl ? user.imageUrl : defaultUser}\r\n                shape=\"rounded-circle\"\r\n                fluid\r\n                width=\"200px\"\r\n                align=\"center\"\r\n              />\r\n            </CCardBody>\r\n            <CCardBody color=\"light\">\r\n              <p>\r\n                <span className=\"font-weight-bold\">Nombres: </span>\r\n                {fixedUser.firstName}\r\n              </p>\r\n              <p>\r\n                <span className=\"font-weight-bold\">Apellidos: </span>\r\n                {fixedUser.lastName}\r\n              </p>\r\n              <p>\r\n                <span className=\"font-weight-bold\">Correo: </span>\r\n                {fixedUser.email}\r\n              </p>\r\n              <p>\r\n                <span className=\"font-weight-bold\">Nombre de usuario: </span>\r\n                {fixedUser.username}\r\n              </p>\r\n              <p>\r\n                <span className=\"font-weight-bold\">Celular: </span>\r\n                {fixedUser.mobileNumber}\r\n              </p>\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n        <CCol xs=\"12\" sm=\"12\" md=\"7\">\r\n          {formError && <CAlert color=\"danger\">{formError}</CAlert>}\r\n          <CCard>\r\n            <CCardHeader>\r\n              <small>EDITAR MÃDICO</small>\r\n            </CCardHeader>\r\n            <CCardBody>\r\n              <CFormGroup>\r\n                <CLabel htmlFor=\"firstName\">Nombres</CLabel>\r\n                <CInput\r\n                  name=\"firstName\"\r\n                  placeholder=\"Nombres\"\r\n                  defaultValue={user.firstName}\r\n                  onChange={handleInputChange}\r\n                  autoComplete=\"off\"\r\n                />\r\n              </CFormGroup>\r\n              <CFormGroup>\r\n                <CLabel htmlFor=\"lastName\">Apellidos</CLabel>\r\n                <CInput\r\n                  name=\"lastName\"\r\n                  placeholder=\"Apellidos\"\r\n                  defaultValue={user.lastName}\r\n                  onChange={handleInputChange}\r\n                  autoComplete=\"off\"\r\n                />\r\n              </CFormGroup>\r\n              <CFormGroup>\r\n                <CLabel htmlFor=\"email\">Correo</CLabel>\r\n                <CInput\r\n                  name=\"email\"\r\n                  placeholder=\"Correo\"\r\n                  autoComplete=\"off\"\r\n                  defaultValue={user.email}\r\n                  onChange={handleInputChange}\r\n                />\r\n              </CFormGroup>\r\n              <CFormGroup>\r\n                <CLabel htmlFor=\"username\">Nombre de usuario</CLabel>\r\n                <CInput\r\n                  name=\"username\"\r\n                  placeholder=\"Nombre de usuario\"\r\n                  defaultValue={user.username}\r\n                  onChange={handleInputChange}\r\n                  autoComplete=\"off\"\r\n                />\r\n              </CFormGroup>\r\n              <CFormGroup>\r\n                <CLabel htmlFor=\"mobileNumber\">Celular</CLabel>\r\n                <CInput\r\n                  name=\"mobileNumber\"\r\n                  placeholder=\"Celular\"\r\n                  type=\"number\"\r\n                  defaultValue={user.mobileNumber}\r\n                  onChange={handleInputChange}\r\n                  autoComplete=\"off\"\r\n                />\r\n              </CFormGroup>\r\n              <CFormGroup>\r\n                <CLabel htmlFor=\"country\">ContraseÃ±a</CLabel>\r\n                <CInput\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  placeholder=\"ContraseÃ±a\"\r\n                  autoComplete=\"new-password\"\r\n                  defaultValue={user.password}\r\n                  onChange={handleInputChange}\r\n                />\r\n                <CFormText className=\"help-block\">\r\n                  * La contraseÃ±a no es un campo necesario, se la puede dejar\r\n                  vacÃ­a\r\n                </CFormText>\r\n              </CFormGroup>\r\n              <CFormGroup>\r\n                <CLabel htmlFor=\"country\">Repita la contraseÃ±a</CLabel>\r\n                <CInput\r\n                  type=\"password\"\r\n                  name=\"password2\"\r\n                  placeholder=\"Repita la contraseÃ±a\"\r\n                  autoComplete=\"off\"\r\n                  defaultValue={user.password2}\r\n                  onChange={handleInputChange}\r\n                />\r\n              </CFormGroup>\r\n            </CCardBody>\r\n            <CCardFooter className=\"text-center\">\r\n              <CButton\r\n                type=\"submit\"\r\n                size=\"md\"\r\n                color=\"info\"\r\n                onClick={handleUserModification}\r\n                className=\"mx-2\"\r\n              >\r\n                <CIcon name=\"cil-scrubber\" /> Editar\r\n              </CButton>\r\n              <CButton\r\n                type=\"reset\"\r\n                size=\"md\"\r\n                color=\"danger\"\r\n                className=\"mx-2\"\r\n                onClick={deletionValid}\r\n              >\r\n                <CIcon name=\"cil-ban\" /> Eliminar\r\n              </CButton>\r\n            </CCardFooter>\r\n          </CCard>\r\n        </CCol>\r\n      </CRow>\r\n\r\n      <CModal\r\n        show={success}\r\n        onClose={() => setSuccess(!success)}\r\n        color=\"success\"\r\n      >\r\n        <CModalHeader closeButton>\r\n          <CModalTitle>MÃ©dico editado correctamente</CModalTitle>\r\n        </CModalHeader>\r\n        <CModalFooter className=\"text-center\">\r\n          <CButton\r\n            color=\"success\"\r\n            onClick={() => {\r\n              setSuccess(!success);\r\n              history.push(\"/doctors/view-all-doctors\");\r\n            }}\r\n          >\r\n            Cerrar\r\n          </CButton>\r\n        </CModalFooter>\r\n      </CModal>\r\n\r\n      <CModal show={danger} onClose={() => setDanger(!danger)} color=\"danger\">\r\n        <CModalHeader closeButton>\r\n          <CModalTitle>Eliminar mÃ©dico</CModalTitle>\r\n        </CModalHeader>\r\n        <CModalBody>\r\n          Â¿EstÃ¡ seguro que desea continuar? Esta acciÃ³n es irreversible.\r\n        </CModalBody>\r\n        <CModalFooter>\r\n          <CButton color=\"danger\" onClick={handleUserElimination}>\r\n            Eliminar\r\n          </CButton>{\" \"}\r\n          <CButton color=\"secondary\" onClick={() => setDanger(!danger)}>\r\n            Cancelar\r\n          </CButton>\r\n        </CModalFooter>\r\n      </CModal>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default DoctorDetails;\r\n"],"sourceRoot":""}