{"version":3,"sources":["webpack:///src/app/protected/pages/doctors/doctor-creation/doctor-creation.component.ts","webpack:///src/app/protected/pages/doctors/doctor-creation/doctor-creation.component.html","webpack:///src/app/protected/pages/doctors/doctor-inspection/doctor-inspection.component.ts","webpack:///src/app/protected/pages/doctors/doctor-inspection/doctor-inspection.component.html","webpack:///src/app/protected/pages/doctors/doctors-list/doctors-list.component.ts","webpack:///src/app/protected/pages/doctors/doctors-list/doctors-list.component.html","webpack:///src/app/protected/pages/doctors/doctors-routing.module.ts","webpack:///src/app/protected/pages/doctors/doctors.module.ts"],"names":["DoctorCreationComponent","usersRequests","toastrService","router","redirectOnCancelRoute","viewAll","doctorToCreate","createDoctor","subscribe","body","successToastr","firstName","lastName","navigate","error","errorToastr","onFormSubmission","selector","templateUrl","styleUrls","DoctorInspectionComponent","activatedRoute","usersRequestsService","params","pipe","id","getDoctorById","response","doctor","doctorToUpdate","modifyUser","deleteDoctor","DoctorsListComponent","toasterService","userRequests","doctorsBaseRoute","main","listDoctors","doctorsList","queryParam","onNameSearch","routes","path","children","component","redirectTo","DoctorsRoutingModule","forChild","imports","exports","DoctorsModule","declarations"],"mappings":"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","file":"pages-doctors-doctors-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UserCreation } from 'app/protected/interfaces/user/User.interface';\nimport { doctorsRoutes } from 'app/protected/routes/protected.routes';\nimport { UsersRequestsService } from 'app/protected/services/users-requests.service';\nimport { ToastrService } from 'app/shared/services/toastr.service';\n\n@Component({\n  selector: 'ngx-doctor-creation',\n  templateUrl: './doctor-creation.component.html',\n  styleUrls: ['./doctor-creation.component.scss'],\n})\nexport class DoctorCreationComponent implements OnInit {\n  public redirectOnCancelRoute: string = doctorsRoutes.viewAll;\n\n  constructor(\n    private usersRequests: UsersRequestsService,\n    private toastrService: ToastrService,\n    private router: Router,\n  ) {}\n\n  ngOnInit(): void {}\n\n  onFormSubmission(doctorToCreate: UserCreation) {\n    this.usersRequests.createDoctor(doctorToCreate).subscribe(\n      ({ body }) => {\n        this.toastrService.successToastr(\n          'Médico creado',\n          `Médico ${body.firstName} ${body.lastName} creado exitosamente`,\n        );\n        this.router.navigate([doctorsRoutes.viewAll]);\n      },\n      (error) => {\n        this.toastrService.errorToastr(error.error.error);\n      },\n    );\n  }\n}\n","<ngx-user-form\n  (userCreation)=\"onFormSubmission($event)\"\n  formTitle=\"Nuevo médico\"\n  [redirectOnCancelRoute]=\"redirectOnCancelRoute\"\n></ngx-user-form>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport {\n  UserCreation,\n  UserDTO,\n} from 'app/protected/interfaces/user/User.interface';\nimport { doctorsRoutes } from 'app/protected/routes/protected.routes';\nimport { UsersRequestsService } from 'app/protected/services/users-requests.service';\nimport { ToastrService } from 'app/shared/services/toastr.service';\nimport { switchMap } from 'rxjs/operators';\n\n@Component({\n  selector: 'ngx-doctor-inspection',\n  templateUrl: './doctor-inspection.component.html',\n  styleUrls: ['./doctor-inspection.component.scss'],\n})\nexport class DoctorInspectionComponent implements OnInit {\n  doctor: UserDTO;\n  redirectOnCancelRoute: string = doctorsRoutes.viewAll;\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private usersRequestsService: UsersRequestsService,\n    private toastrService: ToastrService,\n  ) {}\n\n  ngOnInit(): void {\n    this.activatedRoute.params\n      .pipe(switchMap(({ id }) => this.usersRequestsService.getDoctorById(id)))\n      .subscribe(\n        (response) => {\n          this.doctor = response.body;\n        },\n        (error) => {\n          this.router.navigate([doctorsRoutes.viewAll]);\n        },\n      );\n  }\n\n  onFormSubmission(doctorToUpdate: UserCreation) {\n    this.usersRequestsService.modifyUser(doctorToUpdate).subscribe(\n      (response) => {\n        this.toastrService.successToastr(\n          'Médico modificado',\n          `Médico modificado exitosamente`,\n        );\n        this.router.navigate([doctorsRoutes.viewAll]);\n      },\n      (error) => {\n        this.toastrService.errorToastr('Acción no permitida');\n      },\n    );\n  }\n\n  onDoctorDeletion(id: string) {\n    this.usersRequestsService.deleteDoctor(id).subscribe(\n      (response) => {\n        this.toastrService.successToastr(\n          'Médico eliminado',\n          `Médico eliminado exitosamente`,\n        );\n        this.router.navigate([doctorsRoutes.viewAll]);\n      },\n      (error) => {\n        this.toastrService.errorToastr('Acción no permitida');\n      },\n    );\n  }\n}\n","<ngx-user-form\n  *ngIf=\"doctor; else loaderDiv\"\n  formTitle=\"Editar médico\"\n  confirmationButtonMessage=\"Editar\"\n  [passwordRequired]=\"false\"\n  [user]=\"doctor\"\n  [redirectOnCancelRoute]=\"redirectOnCancelRoute\"\n  (userCreation)=\"onFormSubmission($event)\"\n  (userDeletion)=\"onDoctorDeletion($event)\"\n></ngx-user-form>\n\n<ng-template #loaderDiv>\n  <nb-card nbSpinner=\"true\" nbSpinnerSize=\"large\" nbSpinnerStatus=\"primary\">\n    <nb-card-body> Cargando usuario... </nb-card-body></nb-card\n  >\n</ng-template>\n","import { Component, OnInit } from '@angular/core';\nimport { GenericUser } from 'app/protected/interfaces/user/GenericUser.interface';\nimport { doctorsRoutes } from 'app/protected/routes/protected.routes';\nimport { UsersRequestsService } from 'app/protected/services/users-requests.service';\nimport { ToastrService } from 'app/shared/services/toastr.service';\n\n@Component({\n  selector: 'ngx-doctors-list',\n  templateUrl: './doctors-list.component.html',\n  styleUrls: ['./doctors-list.component.scss'],\n})\nexport class DoctorsListComponent implements OnInit {\n  doctorsList: GenericUser[];\n\n  doctorsBaseRoute: string = doctorsRoutes.main;\n\n  constructor(\n    private toasterService: ToastrService,\n    private userRequests: UsersRequestsService,\n  ) {}\n\n  ngOnInit(): void {\n    this.userRequests.listDoctors().subscribe(\n      (response) => {\n        this.doctorsList = response.body;\n      },\n      (error) => {\n        this.toasterService.errorToastr(error.error.error);\n      },\n    );\n  }\n\n  onNameSearch(queryParam: string) {\n    this.userRequests.listDoctors(queryParam).subscribe(\n      (response) => {\n        this.doctorsList = response.body;\n      },\n      (error) => {\n        this.toasterService.errorToastr('Búsqueda inválida');\n      },\n    );\n  }\n}\n","<div class=\"row\">\n  <div class=\"offset-lg-1 col-lg-10\">\n    <ngx-filter-bar (queryParam)=\"onNameSearch($event)\"></ngx-filter-bar>\n  </div>\n</div>\n<div class=\"row\">\n  <div class=\"offset-lg-1 col-lg-10\">\n    <ngx-users-cards\n      cardTitle=\"Lista de médicos\"\n      [users]=\"doctorsList\"\n      [baseRoute]=\"doctorsBaseRoute\"\n    ></ngx-users-cards>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { DoctorCreationComponent } from './doctor-creation/doctor-creation.component';\nimport { DoctorInspectionComponent } from './doctor-inspection/doctor-inspection.component';\nimport { DoctorsListComponent } from './doctors-list/doctors-list.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    children: [\n      {\n        path: 'register',\n        component: DoctorCreationComponent,\n      },\n      {\n        path: 'view-all-doctors',\n        component: DoctorsListComponent,\n      },\n      {\n        path: ':id',\n        component: DoctorInspectionComponent,\n      },\n      {\n        path: '**',\n        redirectTo: 'view-all-doctors',\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class DoctorsRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DoctorsRoutingModule } from './doctors-routing.module';\nimport { ProtectedModule } from 'app/protected/protected.module';\nimport { DoctorCreationComponent } from './doctor-creation/doctor-creation.component';\nimport { DoctorInspectionComponent } from './doctor-inspection/doctor-inspection.component';\nimport { DoctorsListComponent } from './doctors-list/doctors-list.component';\n\n\n@NgModule({\n  declarations: [DoctorCreationComponent, DoctorInspectionComponent, DoctorsListComponent],\n  imports: [\n    CommonModule,\n    DoctorsRoutingModule,\n    ProtectedModule,\n  ],\n})\nexport class DoctorsModule { }\n"]}