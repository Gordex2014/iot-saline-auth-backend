{"version":3,"sources":["./src/app/auth/services/active-user.service.ts","./src/app/protected/components/filter-bar/filter-bar.component.ts","./src/app/protected/components/filter-bar/filter-bar.component.html","./src/app/protected/components/input-img/input-img.component.ts","./src/app/protected/components/input-img/input-img.component.html","./src/app/protected/components/patient-form/patient-form.component.ts","./src/app/protected/components/patient-form/patient-form.component.html","./src/app/protected/components/patient-info-card/patient-info-card.component.ts","./src/app/protected/components/patient-info-card/patient-info-card.component.html","./src/app/protected/components/records-cards/records-cards.component.ts","./src/app/protected/components/records-cards/records-cards.component.html","./src/app/protected/components/simple-date-picker/simple-date-picker.component.ts","./src/app/protected/components/simple-date-picker/simple-date-picker.component.html","./src/app/protected/components/simple-record/simple-record.component.ts","./src/app/protected/components/simple-record/simple-record.component.html","./src/app/protected/components/simple-text-area/simple-text-area.component.ts","./src/app/protected/components/simple-text-area/simple-text-area.component.html","./src/app/protected/components/user-form/user-form.component.ts","./src/app/protected/components/user-form/user-form.component.html","./src/app/protected/components/user-info-card/user-info-card.component.ts","./src/app/protected/components/user-info-card/user-info-card.component.html","./src/app/protected/components/users-cards/users-cards.component.ts","./src/app/protected/components/users-cards/users-cards.component.html","./src/app/protected/mocks/Users.mock.ts","./src/app/protected/pages/dashboard/dashboard.component.ts","./src/app/protected/pages/dashboard/dashboard.component.html","./src/app/protected/pages/layout/layout.component.ts","./src/app/protected/pages/layout/layout.component.html","./src/app/protected/pages/layout/sidebar-admin-menu.ts","./src/app/protected/pages/layout/sidebar-doctor-menu.ts","./src/app/protected/protected-routing.module.ts","./src/app/protected/protected.module.ts","./src/app/shared/services/dialog.service.ts","./src/app/shared/utils/toBase64URI.helpers.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAA2C;AACE;;;AAOtC,MAAM,iBAAiB;IAC5B,YAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;IAAG,CAAC;IAEhD,IAAI,UAAU;QACZ,yBAAY,IAAI,CAAC,WAAW,CAAC,IAAI,EAAG;IACtC,CAAC;IAED,IAAI,cAAc;QAChB,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC;IAC9B,CAAC;;kFATU,iBAAiB;oGAAjB,iBAAiB,WAAjB,iBAAiB,mBAFhB,MAAM;6FAEP,iBAAiB;cAH7B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACPD;AAAA;AAAA;AAAA;AAAA;AAA+E;AAClC;AACG;;;;AASzC,MAAM,kBAAkB;IAI7B,YAAoB,mBAAmC;QAAnC,wBAAmB,GAAnB,mBAAmB,CAAgB;QAHvD,WAAM,GAAgB,IAAI,0DAAW,CAAC,EAAE,CAAC,CAAC;QAC1C,kBAAa,GAAY,KAAK,CAAC;QAiBtB,sBAAiB,GAAW,kBAAkB,CAAC;QAE/C,gBAAW,GAAW,oBAAoB,CAAC;QAE1C,eAAU,GAAyB,IAAI,0DAAY,EAAU,CAAC;IAnBd,CAAC;IAE3D,QAAQ;QACN,MAAM,WAAW,GAAG,IAAI,CAAC,mBAAmB,CAAC,kBAAkB,EAAE,CAAC;QAClE,WAAW,CAAC,SAAS,CAAC,CAAC,eAAe,EAAE,EAAE;YACxC,MAAM,QAAQ,GAAG,eAAe,CAAC,CAAC,CAAC,CAAC;YACpC,IAAI,QAAQ,CAAC,KAAK,IAAI,GAAG;gBAAE,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;;gBACjD,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QACjC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,IAAI,cAAc;QAChB,OAAO,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC;IAC/C,CAAC;IAQD,aAAa;QACX,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QACxC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;IAC3B,CAAC;;oFA5BU,kBAAkB;kGAAlB,kBAAkB;QCX/B,6EACE;QAAA,iFAAgB;QAAA,uDAAiB;QAAA,4DAAiB;QAClD,+EACE;QAAA,0EACE;QAAA,sEAOA;QAAA,4EASE;QAFA,0IAAS,mBAAe,IAAC;QAEzB,mEACF;QAAA,4DAAS;QACX,4DAAO;QACT,4DAAe;QACjB,4DAAU;;QAvBQ,0DAAiB;QAAjB,gFAAiB;QAO3B,0DAAiC;QAAjC,8FAAiC;QASjC,0DAAuB;QAAvB,oFAAuB;;6FDNlB,kBAAkB;cAL9B,uDAAS;eAAC;gBACT,QAAQ,EAAE,gBAAgB;gBAC1B,WAAW,EAAE,6BAA6B;gBAC1C,SAAS,EAAE,CAAC,6BAA6B,CAAC;aAC3C;6GAoBU,iBAAiB;kBAAzB,mDAAK;YAEG,WAAW;kBAAnB,mDAAK;YAEI,UAAU;kBAAnB,oDAAM;;;;;;;;;;;;;;AElCT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+E;AAGZ;AACR;;;;;;ICHzD,sEACE;IAAA,oEACF;IAAA,4DAAM;;;IADC,0DAAmB;IAAnB,gJAAmB;;;IAG1B,sEACE;IAAA,oEACF;;IAAA,4DAAM;;;IADC,0DAA2B;IAA3B,iNAA2B;;ADK7B,MAAM,iBAAiB;IAG5B;QAIU,wBAAmB,GAAyB,IAAI,0DAAY,EAAU,CAAC;IAJlE,CAAC;IAMhB,QAAQ;QACN,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;YACrB,IAAI,CAAC,WAAW,GAAG,wEAAS,CAAC,CAAC,CAAC,CAAC;SACjC;IACH,CAAC;IAED,aAAa,CAAC,KAAY;QACxB,MAAM,MAAM,GAAG,KAAK,CAAC,MAA0B,CAAC;QAChD,MAAM,KAAK,GAAG,MAAM,CAAC,KAAiB,CAAC;QACvC,MAAM,IAAI,GAAS,KAAK,CAAC,CAAC,CAAC,CAAC;QAC5B,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,OAAO;YAAE,OAAO;QAChD,wFAAW,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;YAC/B,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YACzB,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACvC,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,WAAW,GAAG,SAAS,CAAC;IAC/B,CAAC;;kFAzBU,iBAAiB;iGAAjB,iBAAiB;;QCX9B,yEACE;QAAA,6GACE;QAGF,6GACE;QAEJ,4DAAM;QAEN,yEACE;QAAA,4EACE;QAD8C,qRAAS,WAAiB,IAAC;QACzE,+EACF;QAAA,4DAAS;QACT,8EACF;QADuC,gJAAU,yBAAqB,IAAC;QAArE,4DACF;QAAA,4DAAM;;QAdC,0DAAmB;QAAnB,iFAAmB;QAInB,0DAAmB;QAAnB,iFAAmB;;6FDMb,iBAAiB;cAL7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,eAAe;gBACzB,WAAW,EAAE,4BAA4B;gBACzC,SAAS,EAAE,CAAC,4BAA4B,CAAC;aAC1C;sCAMU,WAAW;kBAAnB,mDAAK;YAEI,mBAAmB;kBAA5B,oDAAM;;;;;;;;;;;;;;AElBT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+E;AACvB;AAEW;AAMI;;;;;;;;;;IC8D3D,6EAOE;IALA,oUAA6B;IAK7B,qEACF;IAAA,4DAAS;;;AD/Dd,MAAM,oBAAoB;IAU/B,YAAoB,EAAe,EAAU,aAA4B;QAArD,OAAE,GAAF,EAAE,CAAa;QAAU,kBAAa,GAAb,aAAa,CAAe;QAPlE,sBAAiB,GAAY,KAAK,CAAC;QACnC,sBAAiB,GAAW,EAAE,CAAC;QAE/B,uBAAkB,GAAY,IAAI,CAAC;QAElC,oBAAe,GAAY,KAAK,CAAC;QAMhC,cAAS,GAAW,gBAAgB,CAAC;QAErC,8BAAyB,GAAW,WAAW,CAAC;QAEhD,0BAAqB,GAAW,oFAAc,CAAC,OAAO,CAAC;QAEtD,oBAAe,GAAkC,IAAI,0DAAY,EAAmB,CAAC;QAErF,oBAAe,GAAyB,IAAI,0DAAY,EAAU,CAAC;IAZD,CAAC;IAc7E,QAAQ;QACN,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC/B,SAAS,EAAE,EAAE;YACb,QAAQ,EAAE,EAAE;YACZ,WAAW,EAAE,EAAE;YACf,MAAM,EAAE,EAAE;YACV,YAAY,EAAE,EAAE;YAChB,KAAK,EAAE,EAAE;SACV,CAAC,CAAC;QAEH,IAAI,IAAI,CAAC,OAAO,KAAK,SAAS,EAAE;YAC9B,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAC1C,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;YAChC,IAAI,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE;gBACzB,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;aAC/D;SACF;IACH,CAAC;IAED,aAAa,CAAC,QAAgB;QAC5B,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;QACjD,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;IAC9B,CAAC;IAED,iBAAiB;QACf,IAAI,CAAC,aAAa;aACf,0BAA0B,EAAE;aAC5B,OAAO,CAAC,SAAS,CAAC,CAAC,YAAY,EAAE,EAAE;YAClC,IAAI,YAAY,EAAE;gBAChB,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;aAC5C;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IAED,YAAY;QACV,IAAI,CAAC,eAAe,CAAC,IAAI,+BACvB,SAAS,EAAE,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,KAAK,EAClD,QAAQ,EAAE,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,EAChD,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,KAAK,EACtD,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,KAAK,EAC5C,YAAY,EAAE,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,KAAK,IACrD,CAAC,IAAI,CAAC,eAAe,IAAI;YAC1B,QAAQ,EAAE,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,KAAK;SAC9C,CAAC,GACC,CAAC,IAAI,CAAC,OAAO,IAAI,EAAE,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,EAAE,CAAC,EAC5C,CAAC;IACL,CAAC;IAED,aAAa;QACX,IACE,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,KAAK,KAAK,EAAE;YAC9C,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,KAAK,EAAE;YAC7C,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,KAAK,KAAK,EAAE;YAC3C,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,KAAK,KAAK,EAAE;YACjD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,KAAK,CAAC,EAClE;YACA,OAAO,KAAK,CAAC;SACd;aAAM;YACL,OAAO,IAAI,CAAC;SACb;IACH,CAAC;IAED,kBAAkB,CAAC,IAAS;QAC1B,OAAO,CACL,IAAI;YACJ,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,eAAe;YACxD,CAAC,KAAK,CAAC,IAAI,CAAC,CACb,CAAC;IACJ,CAAC;;wFA5FU,oBAAoB;oGAApB,oBAAoB;QChBjC,yEACE;QAAA,yEACE;QAAA,mFAGiB;QAFf,qLAAuB,yBAAqB,IAAC;QAE9C,4DAAgB;QACnB,4DAAM;QACN,yEACE;QAAA,8EAAwD;QAAA,uDAEtD;QAAA,4DAAW;QACb,0EACE;QADI,4IAAU,kBAAc,IAAC;QAC7B,0EACE;QAAA,iFAAgB;QAAA,uDAAe;QAAA,4DAAiB;QAChD,gFACE;QAAA,0EACE;QAAA,uEAQA;QAAA,uEAQF;QAAA,4DAAM;QACN,uEAQA;QAAA,2EACE;QAAA,6EAA+B;QAAA,uEAAM;QAAA,4DAAQ;QAC7C,2EACE;QAAA,sFACE;QAAA,gFAA4B;QAAA,qEAAS;QAAA,4DAAW;QAChD,gFAA2B;QAAA,oEAAQ;QAAA,4DAAW;QAChD,4DAAiB;QACnB,4DAAM;QACR,4DAAM;QACN,2EACE;QAAA,2EACE;QAAA,wEAMA;QAAA,sFAA2C;QAC7C,4DAAM;QACR,4DAAM;QACN,iEACA;QAAA,2EACE;QAAA,8EAME;QAAA,wDACF;QAAA,4DAAS;QACT,yHAOE;QAEF,8EAME;QAAA,sEACF;QAAA,4DAAS;QACX,4DAAM;QACR,4DAAe;QACjB,4DAAU;QACZ,4DAAO;QACT,4DAAM;QACR,4DAAM;;;QAzFA,0DAAuB;QAAvB,oFAAuB;QAIC,0DAA6B;QAA7B,0FAA6B;QAAC,0DAEtD;QAFsD,sFAEtD;QAC8B,0DAAyB;QAAzB,sFAAyB;QAErC,0DAAe;QAAf,8EAAe;QA0CvB,2DAA2B;QAA3B,6EAA2B;QAY7B,0DAA4B;QAA5B,yFAA4B;QAE5B,0DACF;QADE,yGACF;QAEE,0DAA2B;QAA3B,yFAA2B;QAY3B,0DAAsC;QAAtC,yKAAsC;;6FDpEvC,oBAAoB;cALhC,uDAAS;eAAC;gBACT,QAAQ,EAAE,kBAAkB;gBAC5B,WAAW,EAAE,+BAA+B;gBAC5C,SAAS,EAAE,CAAC,+BAA+B,CAAC;aAC7C;sMAaU,OAAO;kBAAf,mDAAK;YAEG,SAAS;kBAAjB,mDAAK;YAEG,yBAAyB;kBAAjC,mDAAK;YAEG,qBAAqB;kBAA7B,mDAAK;YAEI,eAAe;kBAAxB,oDAAM;YAEG,eAAe;kBAAxB,oDAAM;;;;;;;;;;;;;;AEtCT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiD;;;;;;ICAjD,0EACE;IAAA,oFACE;IAAA,uDACF;IAAA,4DAAiB;IACjB,+EACE;IAAA,oEACF;;IAAA,4DAAe;IACf,iFACE;IAAA,oEAAG;IAAA,oEAAG;IAAA,+EAAoB;IAAA,4DAAI;IAAC,wDAAgC;;IAAA,4DAAI;IACnE,qEAAG;IAAA,qEAAG;IAAA,wEAAO;IAAA,4DAAI;IAAC,wDAAoB;IAAA,4DAAI;IAC1C,qEAAG;IAAA,qEAAG;IAAA,mFAAkB;IAAA,4DAAI;IAAC,wDAA0B;IAAA,4DAAI;IAC7D,4DAAiB;IACnB,4DAAU;;;IAVN,0DACF;IADE,kIACF;IAEO,0DAAuB;IAAvB,6MAAuB;IAGG,0DAAgC;IAAhC,uKAAgC;IAC7C,0DAAoB;IAApB,gGAAoB;IACT,0DAA0B;IAA1B,sGAA0B;;;IAKzD,6EACE;IAAA,+EAAe;IAAA,0FAA8B;IAAA,4DAAe;IAAA,4DAC7D;;ADTI,MAAM,wBAAwB;IAGnC,gBAAe,CAAC;;gGAHL,wBAAwB;wGAAxB,wBAAwB;QCRrC,8HACE;QAaF,gNACE;;;QAfO,6EAA+B;;6FDQ3B,wBAAwB;cALpC,uDAAS;eAAC;gBACT,QAAQ,EAAE,uBAAuB;gBACjC,WAAW,EAAE,oCAAoC;gBACjD,SAAS,EAAE,CAAC,oCAAoC,CAAC;aAClD;sCAEU,OAAO;kBAAf,mDAAK;;;;;;;;;;;;;;AERR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiD;AACD;AAGuB;;;;;;;ICLvE,0EACE;IAAA,kFACE;IAAA,wEAAO;IAAA,mFAAmB;IAAA,4DAAQ;IAAA,wEAAO;IAAA,8EAAmB;IAAA,4DAAQ;IACtE,4DAAe;IACjB,4DAAU;;;;IAKJ,kFACE;IAAA,wEAIW;;IACX,yEACE;IAAA,4EAUE;IAAA,uDACF;IAAA,4DAAS;IACT,4EAUE;IAAA,uDACF;IAAA,4DAAS;IACX,4DAAM;IACR,4DAAe;;;;IA9BX,0DAAwB;IAAxB,6IAAwB;IAYtB,0DAAuB;IAAvB,uFAAuB;IAGvB,0DACF;IADE,mGACF;IAQE,0DAAuB;IAAvB,uFAAuB;IAGvB,0DACF;IADE,qGACF;;;IAlCV,0EACE;IAAA,iFAAgB;IAAA,uDAAe;IAAA,4DAAiB;IAChD,+EACE;IAAA,0EACE;IAAA,8IACE;IAgCJ,4DAAU;IACZ,4DAAe;IACjB,4DAAU;;;IAtCQ,0DAAe;IAAf,iFAAe;IAGG,0DAA0B;IAA1B,iFAA0B;;;IAsC5D,6EACE;IAAA,+EAAe;IAAA,iFAAqB;IAAA,4DAAe;IAAA,4DACpD;;ADlCI,MAAM,qBAAqB;IAQhC,YAAoB,mBAAmC;QAAnC,wBAAmB,GAAnB,mBAAmB,CAAgB;QAPvD,yBAAoB,GAAW,oFAAc,CAAC,sBAAsB,CAAC;QACrE,6BAAwB,GAAW,oFAAc,CAAC,0BAA0B,CAAC;QAE7E,kBAAa,GAAY,KAAK,CAAC;QAE/B,cAAS,GAAW,oBAAoB,CAAC;IAEiB,CAAC;IAE3D,QAAQ;QACN,MAAM,WAAW,GAAG,IAAI,CAAC,mBAAmB,CAAC,kBAAkB,EAAE,CAAC;QAClE,WAAW,CAAC,SAAS,CAAC,CAAC,eAAe,EAAE,EAAE;YACxC,MAAM,QAAQ,GAAG,eAAe,CAAC,CAAC,CAAC,CAAC;YACpC,IAAI,QAAQ,CAAC,KAAK,IAAI,GAAG;gBAAE,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;;gBACjD,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QACjC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,IAAI,cAAc;QAChB,OAAO,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC;IAC/C,CAAC;IAED,IAAI,YAAY;QACd,OAAO,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC;IAC/C,CAAC;IAED,IAAI,gBAAgB;QAClB,OAAO,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC,GAAG,CAAC;IACvD,CAAC;IAED,IAAI,kBAAkB;QACpB,OAAO,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC,GAAG,CAAC;IACvD,CAAC;;0FAjCU,qBAAqB;qGAArB,qBAAqB;QCflC,yHACE;QAIF,yHACE;QAwCF,6MACE;;;QA/CO,oFAAsB;QAKtB,0DAA6B;QAA7B,2EAA6B;;6FDUzB,qBAAqB;cALjC,uDAAS;eAAC;gBACT,QAAQ,EAAE,mBAAmB;gBAC7B,WAAW,EAAE,gCAAgC;gBAC7C,SAAS,EAAE,CAAC,gCAAgC,CAAC;aAC9C;6GAoCU,KAAK;kBAAb,mDAAK;;;;;;;;;;;;;;AElDR;AAAA;AAAA;AAAA;AAAA;AAA+E;AAClC;;;;AAOtC,MAAM,yBAAyB;IAWpC;QANS,oBAAe,GAAW,oBAAoB,CAAC;QAE/C,0BAAqB,GAAW,kBAAkB,CAAC;QAElD,mBAAc,GAAuB,IAAI,0DAAY,EAAQ,CAAC;IAEzD,CAAC;IAEhB,QAAQ;QACN,IAAI,IAAI,CAAC,SAAS,KAAK,SAAS,EAAE;YAChC,IAAI,CAAC,cAAc,GAAG,IAAI,0DAAW,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;SACjE;aAAM;YACL,IAAI,CAAC,cAAc,GAAG,IAAI,0DAAW,CAAC,EAAE,CAAC,CAAC;SAC3C;IACH,CAAC;IAED,YAAY,CAAC,YAAyB;QACpC,IAAI,IAAI,CAAC,iBAAiB,CAAC,YAAY,CAAC,EAAE;YACxC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;SACxC;aAAM;YACL,OAAO;SACR;IACH,CAAC;IAED,iBAAiB,CAAC,IAAS;QACzB,OAAO,CACL,IAAI;YACJ,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,eAAe;YACxD,CAAC,KAAK,CAAC,IAAI,CAAC,CACb,CAAC;IACJ,CAAC;;kGAnCU,yBAAyB;yGAAzB,yBAAyB;QCRtC,0EACE;QAAA,oFAAoC;QAAA,uDAAqB;QAAA,4DAAiB;QAC1E,+EACE;QAAA,2EAQA;QAFE,sKAAiB,wBAAoB,IAAC;QANxC,4DAQA;QAAA,oFAA2C;QAC7C,4DAAe;QACjB,4DAAU;;;QAZ4B,0DAAqB;QAArB,oFAAqB;QAKrD,0DAA8B;QAA9B,2FAA8B;;6FDEvB,yBAAyB;cALrC,uDAAS;eAAC;gBACT,QAAQ,EAAE,wBAAwB;gBAClC,WAAW,EAAE,qCAAqC;gBAClD,SAAS,EAAE,CAAC,qCAAqC,CAAC;aACnD;sCAIU,SAAS;kBAAjB,mDAAK;YAEG,eAAe;kBAAvB,mDAAK;YAEG,qBAAqB;kBAA7B,mDAAK;YAEI,cAAc;kBAAvB,oDAAM;;;;;;;;;;;;;;AEjBT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiD;AAGsB;;;;;;AAOhE,MAAM,qBAAqB;IAKhC;QAJO,2BAAsB,GAAW,oFAAc,CAAC,2BAA2B,CAAC;IAIpE,CAAC;;0FALL,qBAAqB;qGAArB,qBAAqB;QCVlC,0EACE;QAAA,+EACE;QAAA,gFACE;QAAA,0EACE;QAAA,iFAAgB;QAAA,uDAA4B;;QAAA,4DAAiB;QAC7D,+EACE;QAAA,oEAAG;QAAA,uDAA6B;QAAA,4DAAI;QACtC,4DAAe;QACf,kFACE;QAAA,6EAME;QAAA,oEACF;QAAA,4DAAS;QACX,4DAAiB;QACnB,4DAAU;QACZ,4DAAgB;QAChB,gFACE;QAAA,2EACE;QAAA,kFAAgB;QAAA,wFAAuB;QAAA,4DAAiB;QACxD,gFACE;QAAA,wDACA;QAAA,iEACA;QAAA,wDACF;QAAA,4DAAe;QACjB,4DAAU;QACZ,4DAAe;QACjB,4DAAe;QACjB,4DAAU;;QA3Bc,0DAA4B;QAA5B,qJAA4B;QAEvC,0DAA6B;QAA7B,4FAA6B;QAO9B,0DAAkD;QAAlD,wLAAkD;QAWpD,0DACA;QADA,8IACA;QACA,0DACF;QADE,6GACF;;6FDjBK,qBAAqB;cALjC,uDAAS;eAAC;gBACT,QAAQ,EAAE,mBAAmB;gBAC7B,WAAW,EAAE,gCAAgC;gBAC7C,SAAS,EAAE,CAAC,gCAAgC,CAAC;aAC9C;sCAIU,MAAM;kBAAd,mDAAK;;;;;;;;;;;;;;AEbR;AAAA;AAAA;AAAA;AAAA;AAA+E;;;;AAOxE,MAAM,uBAAuB;IAWlC;QAVO,iBAAY,GAAW,EAAE,CAAC;QAIxB,kBAAa,GAAW,qCAAqC,CAAC;QAE9D,wBAAmB,GAAW,eAAe,CAAC;QAE7C,kBAAa,GAAyB,IAAI,0DAAY,EAAU,CAAC;IAE5D,CAAC;IAEhB,QAAQ;QACN,IAAI,IAAI,CAAC,SAAS,KAAK,SAAS,EAAE;YAChC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC;SACpC;IACH,CAAC;IAED,gBAAgB,CAAC,IAAY;QAC3B,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAChC,CAAC;;8FArBU,uBAAuB;uGAAvB,uBAAuB;QCPpC,0EACE;QAAA,oFAAoC;QAAA,uDAAmB;QAAA,4DAAiB;QACxE,+EACE;QAAA,8EAOY;QAFV,oMAA0B,+GACT,4BAAwB,IADf;QAE3B,4DAAW;QACd,4DAAe;QACjB,4DAAU;;QAX4B,0DAAmB;QAAnB,kFAAmB;QAMnD,0DAAmC;QAAnC,gGAAmC;;6FDA5B,uBAAuB;cALnC,uDAAS;eAAC;gBACT,QAAQ,EAAE,sBAAsB;gBAChC,WAAW,EAAE,mCAAmC;gBAChD,SAAS,EAAE,CAAC,mCAAmC,CAAC;aACjD;sCAIU,SAAS;kBAAjB,mDAAK;YAEG,aAAa;kBAArB,mDAAK;YAEG,mBAAmB;kBAA3B,mDAAK;YAEI,aAAa;kBAAtB,oDAAM;;;;;;;;;;;;;;AEhBT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+E;AACX;AAED;AAKK;;;;;;;;;;IC2E5D,6EAOE;IALA,8TAA0B;IAK1B,qEACF;IAAA,4DAAS;;;AD5Ed,MAAM,iBAAiB;IAY5B,YAAoB,EAAe,EAAU,aAA4B;QAArD,OAAE,GAAF,EAAE,CAAa;QAAU,kBAAa,GAAb,aAAa,CAAe;QATlE,sBAAiB,GAAY,KAAK,CAAC;QACnC,sBAAiB,GAAW,EAAE,CAAC;QAE/B,uBAAkB,GAAY,IAAI,CAAC;QAElC,sBAAiB,GAAG,CAAC,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,yDAAU,CAAC,QAAQ,CAAC,CAAC;QAEnE,oBAAe,GAAY,KAAK,CAAC;QAMhC,cAAS,GAAW,eAAe,CAAC;QAEpC,8BAAyB,GAAW,WAAW,CAAC;QAEhD,qBAAgB,GAAY,IAAI,CAAC;QAEjC,0BAAqB,GAAW,qFAAe,CAAC,IAAI,CAAC;QAEpD,iBAAY,GACpB,IAAI,0DAAY,EAAgB,CAAC;QAEzB,iBAAY,GAAyB,IAAI,0DAAY,EAAU,CAAC;IAfE,CAAC;IAiB7E,QAAQ;;QACN,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACnC,SAAS,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACpC,QAAQ,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACnC,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,KAAK,CAAC,CAAC;YACpD,QAAQ,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACnC,YAAY,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACvC,QAAQ,EAAE,EAAE;YACZ,SAAS,EAAE,EAAE;YACb,KAAK,EAAE,EAAE;SACV,CAAC,CAAC;QAEH,IAAI,IAAI,CAAC,gBAAgB,EAAE;YACzB,UAAI,CAAC,eAAe;iBACjB,GAAG,CAAC,UAAU,CAAC,0CACd,aAAa,CAAC,IAAI,CAAC,iBAAiB,EAAE;YAC1C,UAAI,CAAC,eAAe;iBACjB,GAAG,CAAC,WAAW,CAAC,0CACf,aAAa,CAAC,IAAI,CAAC,iBAAiB,EAAE;SAC3C;QAED,IAAI,IAAI,CAAC,IAAI,KAAK,SAAS,EAAE;YAC3B,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC3C,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;YAChC,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;gBACtB,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aAChE;SACF;IACH,CAAC;IAED,YAAY;QACV,IAAI,CAAC,IAAI,CAAC,kBAAkB,EAAE;YAAE,OAAO;QACvC,IAAI,CAAC,YAAY,CAAC,IAAI,6CACpB,SAAS,EAAE,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,KAAK,EACtD,QAAQ,EAAE,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,EACpD,KAAK,EAAE,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,KAAK,EAC9C,QAAQ,EAAE,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,EACpD,YAAY,EAAE,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,KAAK,IACzD,CAAC,IAAI,CAAC,eAAe,IAAI;YAC1B,QAAQ,EAAE,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,KAAK;SAClD,CAAC,GACC,CAAC,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,IAAI;YAChD,QAAQ,EAAE,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK;SACrD,CAAC,GACC,CAAC,IAAI,CAAC,IAAI,IAAI,EAAE,EAAE,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,EACtC,CAAC;IACL,CAAC;IAED,aAAa,CAAC,QAAgB;QAC5B,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;QACrD,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;IAC9B,CAAC;IAED,cAAc;QACZ,IAAI,CAAC,aAAa;aACf,0BAA0B,EAAE;aAC5B,OAAO,CAAC,SAAS,CAAC,CAAC,YAAY,EAAE,EAAE;YAClC,IAAI,YAAY,EAAE;gBAChB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;aACtC;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IAED,kBAAkB;QAChB,MAAM,cAAc,GAClB,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK;YAC1C,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,KAAK;YACzC,CAAC,CAAC,IAAI;YACN,CAAC,CAAC,KAAK,CAAC;QACZ,IAAI,CAAC,cAAc,EAAE;YACnB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;YAC9B,IAAI,CAAC,iBAAiB,GAAG,8BAA8B,CAAC;SACzD;aAAM;YACL,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;YAC/B,IAAI,CAAC,iBAAiB,GAAG,EAAE,CAAC;SAC7B;QACD,OAAO,cAAc,CAAC;IACxB,CAAC;;kFA1GU,iBAAiB;iGAAjB,iBAAiB;QCf9B,yEACE;QAAA,yEACE;QAAA,mFAGiB;QAFf,kLAAuB,yBAAqB,IAAC;QAE9C,4DAAgB;QACnB,4DAAM;QACN,yEACE;QAAA,8EAAwD;QAAA,uDAEtD;QAAA,4DAAW;QACb,0EACE;QADI,yIAAU,kBAAc,IAAC;QAC7B,0EACE;QAAA,iFAAgB;QAAA,uDAAe;QAAA,4DAAiB;QAChD,gFACE;QAAA,0EACE;QAAA,uEAQA;QAAA,uEAQF;QAAA,4DAAM;QACN,uEAQA;QAAA,wEAQA;QAAA,wEAQA;QAAA,wEAQA;QAAA,wEAQA;QAAA,iEACA;QAAA,2EACE;QAAA,8EAME;QAAA,wDACF;QAAA,4DAAS;QACT,sHAOE;QAEF,8EAME;QAAA,sEACF;QAAA,4DAAS;QACX,4DAAM;QACR,4DAAe;QACjB,4DAAU;QACZ,4DAAO;QACT,4DAAM;QACR,4DAAM;;QArGA,0DAAoB;QAApB,iFAAoB;QAII,0DAA6B;QAA7B,0FAA6B;QAAC,0DAEtD;QAFsD,sFAEtD;QAC8B,0DAA6B;QAA7B,0FAA6B;QAEzC,0DAAe;QAAf,8EAAe;QAkEzB,2DAAoC;QAApC,iGAAoC;QAEpC,0DACF;QADE,yGACF;QAEE,0DAA2B;QAA3B,yFAA2B;QAY3B,0DAAsC;QAAtC,wKAAsC;;6FDjFvC,iBAAiB;cAL7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,eAAe;gBACzB,WAAW,EAAE,4BAA4B;gBACzC,SAAS,EAAE,CAAC,4BAA4B,CAAC;aAC1C;sMAeU,IAAI;kBAAZ,mDAAK;YAEG,SAAS;kBAAjB,mDAAK;YAEG,yBAAyB;kBAAjC,mDAAK;YAEG,gBAAgB;kBAAxB,mDAAK;YAEG,qBAAqB;kBAA7B,mDAAK;YAEI,YAAY;kBAArB,oDAAM;YAGG,YAAY;kBAArB,oDAAM;;;;;;;;;;;;;;AE1CT;AAAA;AAAA;AAAkD;;AAO3C,MAAM,qBAAqB;IAEhC,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;0FALU,qBAAqB;qGAArB,qBAAqB;QCPlC,oEAAG;QAAA,gFAAqB;QAAA,4DAAI;;6FDOf,qBAAqB;cALjC,uDAAS;eAAC;gBACT,QAAQ,EAAE,oBAAoB;gBAC9B,WAAW,EAAE,iCAAiC;gBAC9C,SAAS,EAAE,CAAC,iCAAiC,CAAC;aAC/C;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyD;AACT;;;;;;;;ICG1C,kFACE;IAAA,wEAKW;;IACX,4EASE;IAAA,uDACF;IAAA,4DAAS;IACX,4DAAe;;;;IAhBX,0DAAwB;IAAxB,6IAAwB;IAWxB,0DAAuB;IAAvB,uFAAuB;IAGvB,0DACF;IADE,+FACF;;;IArBR,0EACE;IAAA,iFAAgB;IAAA,uDAAe;IAAA,4DAAiB;IAChD,+EACE;IAAA,0EACE;IAAA,4IACE;IAkBJ,4DAAU;IACZ,4DAAe;IACjB,4DAAU;;;IAxBQ,0DAAe;IAAf,iFAAe;IAGG,0DAA0B;IAA1B,iFAA0B;;;IAwB5D,6EACE;IAAA,+EAAe;IAAA,iFAAqB;IAAA,4DAAe;IAAA,4DACpD;;ADlBI,MAAM,mBAAmB;IAG9B,YAAoB,mBAAmC;QAAnC,wBAAmB,GAAnB,mBAAmB,CAAgB;QAFvD,kBAAa,GAAY,KAAK,CAAC;QAyBtB,cAAS,GAAW,mBAAmB,CAAC;QAExC,iBAAY,GAAW,QAAQ,CAAC;IAzBiB,CAAC;IAE3D,QAAQ;QACN,MAAM,WAAW,GAAG,IAAI,CAAC,mBAAmB,CAAC,kBAAkB,EAAE,CAAC;QAClE,WAAW,CAAC,SAAS,CAAC,CAAC,eAAe,EAAE,EAAE;YACxC,MAAM,QAAQ,GAAG,eAAe,CAAC,CAAC,CAAC,CAAC;YACpC,IAAI,QAAQ,CAAC,KAAK,IAAI,GAAG;gBAAE,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;;gBACjD,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QACjC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,IAAI,cAAc;QAChB,OAAO,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC;IAC/C,CAAC;IAED,IAAI,YAAY;QACd,OAAO,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC;IAC/C,CAAC;;sFApBU,mBAAmB;mGAAnB,mBAAmB;QCZhC,uHACE;QA0BF,2MACE;;;QA5BO,2EAA6B;;6FDYzB,mBAAmB;cAL/B,uDAAS;eAAC;gBACT,QAAQ,EAAE,iBAAiB;gBAC3B,WAAW,EAAE,8BAA8B;gBAC3C,SAAS,EAAE,CAAC,8BAA8B,CAAC;aAC5C;6GAuBU,KAAK;kBAAb,mDAAK;YAEG,SAAS;kBAAjB,mDAAK;YAEG,SAAS;kBAAjB,mDAAK;YAEG,YAAY;kBAApB,mDAAK;;;;;;;;;;;;;;AEtCR;AAAA;AAAO,MAAM,SAAS,GAAkB;IACtC;QACE,SAAS,EAAE,MAAM;QACjB,QAAQ,EAAE,KAAK;QACf,YAAY,EAAE,QAAQ;QACtB,EAAE,EAAE,0BAA0B;KAC/B;IACD;QACE,SAAS,EAAE,WAAW;QACtB,QAAQ,EAAE,OAAO;QACjB,YAAY,EAAE,QAAQ;QACtB,QAAQ,EAAE,yDAAyD;QACnE,EAAE,EAAE,0BAA0B;KAC/B;IACD;QACE,SAAS,EAAE,aAAa;QACxB,QAAQ,EAAE,aAAa;QACvB,YAAY,EAAE,QAAQ;QACtB,EAAE,EAAE,0BAA0B;KAC/B;IACD;QACE,SAAS,EAAE,MAAM;QACjB,QAAQ,EAAE,aAAa;QACvB,YAAY,EAAE,QAAQ;QACtB,EAAE,EAAE,0BAA0B;KAC/B;IACD;QACE,SAAS,EAAE,oBAAoB;QAC/B,QAAQ,EAAE,QAAQ;QAClB,YAAY,EAAE,QAAQ;QACtB,EAAE,EAAE,0BAA0B;KAC/B;CACF,CAAC;;;;;;;;;;;;;AClCF;AAAA;AAAA;AAAkD;;AAO3C,MAAM,kBAAkB;IAC7B,gBAAe,CAAC;IAEhB,QAAQ,KAAU,CAAC;;oFAHR,kBAAkB;kGAAlB,kBAAkB;QCP/B,oEAAG;QAAA,2EAAgB;QAAA,4DAAI;;6FDOV,kBAAkB;cAL9B,uDAAS;eAAC;gBACT,QAAQ,EAAE,eAAe;gBACzB,WAAW,EAAE,4BAA4B;gBACzC,SAAS,EAAE,CAAC,4BAA4B,CAAC;aAC1C;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAGwB;AACM;AAC1B;AACE;;;;;;;AAOjD,MAAM,eAAe;IAG1B,YACU,iBAAoC,EACpC,mBAAwC;QADxC,sBAAiB,GAAjB,iBAAiB,CAAmB;QACpC,wBAAmB,GAAnB,mBAAmB,CAAqB;QAJlD,gBAAW,GAAiB,EAAE,CAAC;IAK5B,CAAC;IAEJ,QAAQ;QACN,IAAI,IAAI,CAAC,iBAAiB,CAAC,cAAc,KAAK,iBAAiB,EAAE;YAC/D,IAAI,CAAC,mBAAmB,CAAC,YAAY,EAAE,CAAC;YACxC,IAAI,CAAC,WAAW,GAAG,kEAAc,CAAC;SACnC;aAAM;YACL,IAAI,CAAC,mBAAmB,CAAC,eAAe,EAAE,CAAC;YAC3C,IAAI,CAAC,WAAW,GAAG,oEAAe,CAAC;SACpC;IACH,CAAC;;8EAhBU,eAAe;+FAAf,eAAe;QCb5B,wFACE;QAAA,wEAAyC;QACzC,2EAA+B;QACjC,4DAAwB;;QAFb,0DAAqB;QAArB,kFAAqB;;6FDYnB,eAAe;cAL3B,uDAAS;eAAC;gBACT,QAAQ,EAAE,YAAY;gBACtB,WAAW,EAAE,yBAAyB;gBACtC,SAAS,EAAE,CAAC,yBAAyB,CAAC;aACvC;;;;;;;;;;;;;;AEXD;AAAA;AAAA;AAQ+C;AAExC,MAAM,cAAc,GAAiB;IAC1C;QACE,KAAK,EAAE,WAAW;QAClB,IAAI,EAAE,cAAc;QACpB,IAAI,EAAE,qFAAe,CAAC,IAAI;QAC1B,IAAI,EAAE,IAAI;KACX;IACD;QACE,KAAK,EAAE,UAAU;QACjB,KAAK,EAAE,IAAI;KACZ;IACD;QACE,KAAK,EAAE,iBAAiB;QACxB,IAAI,EAAE,oBAAoB;QAC1B,QAAQ,EAAE;YACR;gBACE,KAAK,EAAE,+BAA+B;gBACtC,IAAI,EAAE,kFAAY,CAAC,YAAY;aAChC;YACD;gBACE,KAAK,EAAE,6BAA6B;gBACpC,IAAI,EAAE,kFAAY,CAAC,OAAO;aAC3B;SACF;KACF;IACD;QACE,KAAK,EAAE,SAAS;QAChB,IAAI,EAAE,oBAAoB;QAC1B,QAAQ,EAAE;YACR;gBACE,KAAK,EAAE,wBAAwB;gBAC/B,IAAI,EAAE,mFAAa,CAAC,YAAY;aACjC;YACD;gBACE,KAAK,EAAE,qBAAqB;gBAC5B,IAAI,EAAE,mFAAa,CAAC,OAAO;aAC5B;SACF;KACF;IACD;QACE,KAAK,EAAE,oBAAoB;QAC3B,KAAK,EAAE,IAAI;KACZ;IACD;QACE,KAAK,EAAE,WAAW;QAClB,IAAI,EAAE,gBAAgB;QACtB,QAAQ,EAAE;YACR;gBACE,KAAK,EAAE,0BAA0B;gBACjC,IAAI,EAAE,oFAAc,CAAC,YAAY;aAClC;YACD;gBACE,KAAK,EAAE,6BAA6B;gBACpC,IAAI,EAAE,oFAAc,CAAC,OAAO;aAC7B;YACD;gBACE,KAAK,EAAE,yBAAyB;gBAChC,IAAI,EAAE,oFAAc,CAAC,UAAU;aAChC;SACF;KACF;IACD;QACE,KAAK,EAAE,iBAAiB;QACxB,KAAK,EAAE,IAAI;KACZ;IACD;QACE,KAAK,EAAE,cAAc;QACrB,IAAI,EAAE,cAAc;QACpB,QAAQ,EAAE;YACR;gBACE,KAAK,EAAE,4BAA4B;gBACnC,IAAI,EAAE,iFAAW,CAAC,YAAY;aAC/B;YACD;gBACE,KAAK,EAAE,2BAA2B;gBAClC,IAAI,EAAE,iFAAW,CAAC,OAAO;aAC1B;SACF;KACF;IACD;QACE,KAAK,EAAE,OAAO;QACd,IAAI,EAAE,0BAA0B;QAChC,QAAQ,EAAE;YACR;gBACE,KAAK,EAAE,sBAAsB;gBAC7B,IAAI,EAAE,gFAAU,CAAC,YAAY;aAC9B;YACD;gBACE,KAAK,EAAE,oBAAoB;gBAC3B,IAAI,EAAE,gFAAU,CAAC,OAAO;aACzB;SACF;KACF;IACD;QACE,KAAK,EAAE,KAAK;QACZ,KAAK,EAAE,IAAI;KACZ;IACD;QACE,KAAK,EAAE,cAAc;QACrB,IAAI,EAAE,eAAe;QACrB,QAAQ,EAAE;YACR;gBACE,KAAK,EAAE,6BAA6B;gBACpC,IAAI,EAAE,mFAAa,CAAC,YAAY;aACjC;YACD;gBACE,KAAK,EAAE,2BAA2B;gBAClC,IAAI,EAAE,mFAAa,CAAC,OAAO;aAC5B;SACF;KACF;CACF,CAAC;;;;;;;;;;;;;ACzHF;AAAA;AAAA;AAK+C;AAExC,MAAM,eAAe,GAAiB;IAC3C;QACE,KAAK,EAAE,WAAW;QAClB,IAAI,EAAE,cAAc;QACpB,IAAI,EAAE,qFAAe,CAAC,IAAI;QAC1B,IAAI,EAAE,IAAI;KACX;IACD;QACE,KAAK,EAAE,UAAU;QACjB,KAAK,EAAE,IAAI;KACZ;IACD;QACE,KAAK,EAAE,SAAS;QAChB,IAAI,EAAE,oBAAoB;QAC1B,QAAQ,EAAE;YACR;gBACE,KAAK,EAAE,qBAAqB;gBAC5B,IAAI,EAAE,mFAAa,CAAC,OAAO;aAC5B;SACF;KACF;IACD;QACE,KAAK,EAAE,oBAAoB;QAC3B,KAAK,EAAE,IAAI;KACZ;IACD;QACE,KAAK,EAAE,WAAW;QAClB,IAAI,EAAE,gBAAgB;QACtB,QAAQ,EAAE;YACR;gBACE,KAAK,EAAE,0BAA0B;gBACjC,IAAI,EAAE,oFAAc,CAAC,YAAY;aAClC;YACD;gBACE,KAAK,EAAE,6BAA6B;gBACpC,IAAI,EAAE,oFAAc,CAAC,OAAO;aAC7B;YACD;gBACE,KAAK,EAAE,yBAAyB;gBAChC,IAAI,EAAE,oFAAc,CAAC,UAAU;aAChC;SACF;KACF;IACD;QACE,KAAK,EAAE,KAAK;QACZ,KAAK,EAAE,IAAI;KACZ;IACD;QACE,KAAK,EAAE,cAAc;QACrB,IAAI,EAAE,eAAe;QACrB,QAAQ,EAAE;YACR;gBACE,KAAK,EAAE,6BAA6B;gBACpC,IAAI,EAAE,mFAAa,CAAC,YAAY;aACjC;YACD;gBACE,KAAK,EAAE,2BAA2B;gBAClC,IAAI,EAAE,mFAAa,CAAC,OAAO;aAC5B;SACF;KACF;CACF,CAAC;;;;;;;;;;;;;ACrEF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AACoB;AACT;;;AAElE,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,8EAAe;QAC1B,QAAQ,EAAE;YACR;gBACE,IAAI,EAAE,WAAW;gBACjB,SAAS,EAAE,uFAAkB;aAC9B;YACD;gBACE,IAAI,EAAE,QAAQ;gBACd,YAAY,EAAE,GAAG,EAAE,CACjB,6QAAsC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,YAAY,CAAC;aACrE;YACD;gBACE,IAAI,EAAE,SAAS;gBACf,YAAY,EAAE,GAAG,EAAE,CACjB,qRAAwC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,aAAa,CAAC;aACxE;YACD;gBACE,IAAI,EAAE,UAAU;gBAChB,YAAY,EAAE,GAAG,EAAE,CACjB,6RAA0C,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,cAAc,CAAC;aAC3E;YACD;gBACE,IAAI,EAAE,IAAI;gBACV,UAAU,EAAE,WAAW;aACxB;SACF;KACF;CACF,CAAC;AAMK,MAAM,sBAAsB;;qGAAtB,sBAAsB;sKAAtB,sBAAsB,kBAHxB,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAC9B,4DAAY;mIAEX,sBAAsB,uFAFvB,4DAAY;6FAEX,sBAAsB;cAJlC,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;gBACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACxCD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACM;AACA;AACmB;AAEpB;AACO;AAEe;AAEF;AACV;AAEmB;AACT;AACa;AACA;AACM;AACH;AACM;AACG;AACE;AACY;AACN;AACG;AACX;;AA2CpF,MAAM,eAAe;;8FAAf,eAAe;wJAAf,eAAe,kBAzBjB;YACP,4DAAY;YACZ,kEAAmB;YACnB,0DAAW;YACX,4DAAY;YACZ,gFAAsB;YACtB,2DAAY;YACZ,+DAAW;YACX,+EAAa;YACb,qEAAY;SACb;mIAeU,eAAe,mBAvCxB,uFAAkB;QAClB,+FAAkB;QAClB,4FAAiB;QACjB,+EAAe;QACf,qGAAoB;QACpB,mHAAwB;QACxB,wGAAqB;QACrB,sHAAyB;QACzB,gHAAuB;QACvB,4FAAiB;QACjB,0GAAqB;QACrB,kGAAmB;QACnB,wGAAqB,aAGrB,4DAAY;QACZ,kEAAmB;QACnB,0DAAW;QACX,4DAAY;QACZ,gFAAsB;QACtB,2DAAY;QACZ,+DAAW;QACX,+EAAa;QACb,qEAAY,aAGZ,+FAAkB;QAClB,4FAAiB;QACjB,qGAAoB;QACpB,mHAAwB;QACxB,wGAAqB;QACrB,sHAAyB;QACzB,gHAAuB;QACvB,4FAAiB;QACjB,0GAAqB;QACrB,kGAAmB;QACnB,wGAAqB;6FAGZ,eAAe;cAzC3B,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,uFAAkB;oBAClB,+FAAkB;oBAClB,4FAAiB;oBACjB,+EAAe;oBACf,qGAAoB;oBACpB,mHAAwB;oBACxB,wGAAqB;oBACrB,sHAAyB;oBACzB,gHAAuB;oBACvB,4FAAiB;oBACjB,0GAAqB;oBACrB,kGAAmB;oBACnB,wGAAqB;iBACtB;gBACD,OAAO,EAAE;oBACP,4DAAY;oBACZ,kEAAmB;oBACnB,0DAAW;oBACX,4DAAY;oBACZ,gFAAsB;oBACtB,2DAAY;oBACZ,+DAAW;oBACX,+EAAa;oBACb,qEAAY;iBACb;gBACD,OAAO,EAAE;oBACP,+FAAkB;oBAClB,4FAAiB;oBACjB,qGAAoB;oBACpB,mHAAwB;oBACxB,wGAAqB;oBACrB,sHAAyB;oBACzB,gHAAuB;oBACvB,4FAAiB;oBACjB,0GAAqB;oBACrB,kGAAmB;oBACnB,wGAAqB;iBACtB;aACF;;;;;;;;;;;;;;ACnED;AAAA;AAAA;AAAA;AAAA;AAA2C;AACmB;AAEoE;;;AAK3H,MAAM,aAAa;IACxB,YAAoB,aAA8B;QAA9B,kBAAa,GAAb,aAAa,CAAiB;IAAG,CAAC;IAEtD,0BAA0B;QACxB,OAAO,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,6IAAiC,CAAC,CAAC;IACpE,CAAC;;0EALU,aAAa;gGAAb,aAAa,WAAb,aAAa,mBAFZ,MAAM;6FAEP,aAAa;cAHzB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACPD;AAAA;AAAO,MAAM,WAAW,GAAG,CAAC,IAAU,EAAE,EAAE;IACxC,OAAO,IAAI,OAAO,CAAM,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;QAC1C,MAAM,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC;QAChC,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QAC3B,MAAM,CAAC,MAAM,GAAG,GAAG,EAAE,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QAC7C,MAAM,CAAC,OAAO,GAAG,CAAC,KAAK,EAAE,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;IAC5C,CAAC,CAAC,CAAC;AACL,CAAC,CAAC","file":"protected-protected-module-es2015.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { AuthService } from './auth.service';\n\nimport { ActiveUser, ActiveUserRole } from 'app/auth/interfaces/ActiveUser.interface';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ActiveUserService {\n  constructor(private authService: AuthService) {}\n\n  get activeUser(): ActiveUser {\n    return { ...this.authService.user };\n  }\n\n  get activeUserRole(): ActiveUserRole {\n    return this.activeUser.role;\n  }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { NbThemeService } from '@nebular/theme';\n\ntype ButtonFontSize = 'tiny' | 'small';\n\n@Component({\n  selector: 'ngx-filter-bar',\n  templateUrl: './filter-bar.component.html',\n  styleUrls: ['./filter-bar.component.scss'],\n})\nexport class FilterBarComponent implements OnInit {\n  filter: FormControl = new FormControl('');\n  screenSizeBig: boolean = false;\n\n  constructor(private themeServiceService: NbThemeService) {}\n\n  ngOnInit(): void {\n    const $mediaQuery = this.themeServiceService.onMediaQueryChange();\n    $mediaQuery.subscribe((mediaBreakPoint) => {\n      const newValue = mediaBreakPoint[1];\n      if (newValue.width <= 576) this.screenSizeBig = false;\n      else this.screenSizeBig = true;\n    });\n  }\n\n  get buttonFontSize(): ButtonFontSize {\n    return this.screenSizeBig ? 'small' : 'tiny';\n  }\n\n  @Input() filterPlaceholder: string = 'Nombre a filtrar';\n\n  @Input() filterTitle: string = 'Filtrar por nombre';\n\n  @Output() queryParam: EventEmitter<string> = new EventEmitter<string>();\n\n  onSearchClick() {\n    this.queryParam.emit(this.filter.value);\n    this.filter.setValue('');\n  }\n}\n","<nb-card class=\"inline-form-card\">\n  <nb-card-header>{{ filterTitle }}</nb-card-header>\n  <nb-card-body>\n    <form class=\"form-inline\">\n      <input\n        type=\"text\"\n        nbInput\n        fullWidth\n        [placeholder]=\"filterPlaceholder\"\n        [formControl]=\"filter\"\n      />\n      <button\n        type=\"button\"\n        nbButton\n        outline\n        shape=\"semi-round\"\n        status=\"primary\"\n        [size]=\"buttonFontSize\"\n        (click)=\"onSearchClick()\"\n      >\n        Buscar\n      </button>\n    </form>\n  </nb-card-body>\n</nb-card>\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\nimport { GenericUser } from 'app/protected/interfaces/user/GenericUser.interface';\nimport { toBase64URI } from 'app/shared/utils/toBase64URI.helpers';\nimport { UsersMock } from 'app/protected/mocks/Users.mock';\n\n@Component({\n  selector: 'ngx-input-img',\n  templateUrl: './input-img.component.html',\n  styleUrls: ['./input-img.component.scss'],\n})\nexport class InputImgComponent implements OnInit {\n  base64Image: string | undefined;\n\n  constructor() {}\n\n  @Input() genericUser: GenericUser | undefined;\n\n  @Output() selectedInputImgURI: EventEmitter<string> = new EventEmitter<string>();\n\n  ngOnInit(): void {\n    if (!this.genericUser) {\n      this.genericUser = UsersMock[0];\n    }\n  }\n\n  onImageChange(event: Event) {\n    const target = event.target as HTMLInputElement;\n    const files = target.files as FileList;\n    const file: File = files[0];\n    if (file.type.split('/')[0] !== 'image') return;\n    toBase64URI(file).then((value) => {\n      this.base64Image = value;\n      this.selectedInputImgURI.emit(value);\n    });\n    this.genericUser = undefined;\n  }\n}\n","<div class=\"file-upload__element\">\n  <div *ngIf=\"base64Image\">\n    <img [src]=\"base64Image\" />\n  </div>\n\n  <div *ngIf=\"genericUser\">\n    <img [src]=\"genericUser | image\" />\n  </div>\n</div>\n\n<div class=\"file-upload__element\">\n  <button type=\"button\" nbButton status=\"primary\" (click)=\"fileInput.click()\">\n    Seleccionar imagen\n  </button>\n  <input type=\"file\" hidden #fileInput (change)=\"onImageChange($event)\" />\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\nimport { DialogService } from 'app/shared/services/dialog.service';\n\nimport {\n  PatientCreation,\n  PatientDTO,\n} from 'app/protected/interfaces/patient/Patient.interface';\nimport { patientsRoutes } from 'app/protected/routes/protected.routes';\n\n@Component({\n  selector: 'ngx-patient-form',\n  templateUrl: './patient-form.component.html',\n  styleUrls: ['./patient-form.component.scss'],\n})\nexport class PatientFormComponent implements OnInit {\n  public patientForm: FormGroup;\n\n  public displayErrorAlert: boolean = false;\n  public errorAlertMessage: string = '';\n\n  public deleteButtonHidden: boolean = true;\n\n  private imageHasChanged: boolean = false;\n\n  constructor(private fb: FormBuilder, private dialogService: DialogService) {}\n\n  @Input() patient: PatientDTO | undefined;\n\n  @Input() formTitle: string = 'Nuevo paciente';\n\n  @Input() confirmationButtonMessage: string = 'Registrar';\n\n  @Input() redirectOnCancelRoute: string = patientsRoutes.viewAll;\n\n  @Output() patientCreation: EventEmitter<PatientCreation> = new EventEmitter<PatientCreation>();\n\n  @Output() patientDeletion: EventEmitter<string> = new EventEmitter<string>();\n\n  ngOnInit(): void {\n    this.patientForm = this.fb.group({\n      firstName: '',\n      lastName: '',\n      dateOfBirth: '',\n      gender: '',\n      mobileNumber: '',\n      image: '',\n    });\n\n    if (this.patient !== undefined) {\n      this.patientForm.patchValue(this.patient);\n      this.deleteButtonHidden = false;\n      if (this.patient.imageUrl) {\n        this.patientForm.get('image').setValue(this.patient.imageUrl);\n      }\n    }\n  }\n\n  onImageChange(imageURI: string) {\n    this.patientForm.get('image').setValue(imageURI);\n    this.imageHasChanged = true;\n  }\n\n  onPatientDeletion() {\n    this.dialogService\n      .deletionConfirmationDialog()\n      .onClose.subscribe((confirmation) => {\n        if (confirmation) {\n          this.patientDeletion.emit(this.patient.id);\n        }\n      });\n  }\n\n  onFormSubmit() {\n    this.patientCreation.emit({\n      firstName: this.patientForm.get('firstName').value,\n      lastName: this.patientForm.get('lastName').value,\n      dateOfBirth: this.patientForm.get('dateOfBirth').value,\n      gender: this.patientForm.get('gender').value,\n      mobileNumber: this.patientForm.get('mobileNumber').value,\n      ...(this.imageHasChanged && {\n        imageURI: this.patientForm.get('image').value,\n      }),\n      ...(this.patient && { id: this.patient.id }),\n    });\n  }\n\n  isFormInvalid(): boolean {\n    if (\n      this.patientForm.get('firstName').value !== '' &&\n      this.patientForm.get('lastName').value !== '' &&\n      this.patientForm.get('gender').value !== '' &&\n      this.patientForm.get('mobileNumber').value !== '' &&\n      this.isDateOfBirthADate(this.patientForm.get('dateOfBirth').value)\n    ) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  isDateOfBirthADate(date: any): boolean {\n    return (\n      date &&\n      Object.prototype.toString.call(date) === '[object Date]' &&\n      !isNaN(date)\n    );\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-md-5 col-xl-4\">\n    <ngx-input-img\n      (selectedInputImgURI)=\"onImageChange($event)\"\n      [genericUser]=\"patient\"\n    ></ngx-input-img>\n  </div>\n  <div class=\"col-md-7 col-xl-8\">\n    <nb-alert status=\"danger\" [hidden]=\"!displayErrorAlert\">{{\n      errorAlertMessage\n    }}</nb-alert>\n    <form (submit)=\"onFormSubmit()\" [formGroup]=\"patientForm\">\n      <nb-card>\n        <nb-card-header>{{ formTitle }}</nb-card-header>\n        <nb-card-body>\n          <div class=\"full-name-inputs\">\n            <input\n              type=\"text\"\n              nbInput\n              fullWidth\n              shape=\"semi-round\"\n              placeholder=\"Nombres\"\n              formControlName=\"firstName\"\n            />\n            <input\n              type=\"text\"\n              nbInput\n              fullWidth\n              shape=\"semi-round\"\n              placeholder=\"Apellidos\"\n              formControlName=\"lastName\"\n            />\n          </div>\n          <input\n            type=\"number\"\n            nbInput\n            fullWidth\n            shape=\"semi-round\"\n            placeholder=\"Celular\"\n            formControlName=\"mobileNumber\"\n          />\n          <div class=\"form-group row\">\n            <label class=\"col text-center\">Género</label>\n            <div class=\"col\">\n              <nb-radio-group formControlName=\"gender\">\n                <nb-radio value=\"Masculino\">Masculino</nb-radio>\n                <nb-radio value=\"Femenino\">Femenino</nb-radio>\n              </nb-radio-group>\n            </div>\n          </div>\n          <div class=\"form-group row\">\n            <div class=\"col text-center\">\n              <input\n                nbInput\n                placeholder=\"Fecha de nacimiento\"\n                [nbDatepicker]=\"formpicker\"\n                formControlName=\"dateOfBirth\"\n              />\n              <nb-datepicker #formpicker></nb-datepicker>\n            </div>\n          </div>\n          <hr />\n          <div class=\"confirmation-buttons\">\n            <button\n              type=\"submit\"\n              nbButton\n              status=\"primary\"\n              [disabled]=\"isFormInvalid()\"\n            >\n              {{ confirmationButtonMessage }}\n            </button>\n            <button\n              *ngIf=\"!deleteButtonHidden\"\n              (click)=\"onPatientDeletion()\"\n              type=\"button\"\n              nbButton\n              status=\"danger\"\n            >\n              Eliminar\n            </button>\n            <button\n              type=\"button\"\n              nbButton\n              status=\"warning\"\n              [routerLink]=\"[redirectOnCancelRoute]\"\n            >\n              Cancelar\n            </button>\n          </div>\n        </nb-card-body>\n      </nb-card>\n    </form>\n  </div>\n</div>\n","import { Component, Input } from '@angular/core';\nimport { PatientDTO } from 'app/protected/interfaces/patient/Patient.interface';\n\n@Component({\n  selector: 'ngx-patient-info-card',\n  templateUrl: './patient-info-card.component.html',\n  styleUrls: ['./patient-info-card.component.scss'],\n})\nexport class PatientInfoCardComponent {\n  @Input() patient: PatientDTO | undefined;\n\n  constructor() {}\n}\n","<nb-card *ngIf=\"patient; else loaderDiv\">\n  <nb-card-header class=\"text-center\">\n    {{ patient.firstName }} {{ patient.lastName }}\n  </nb-card-header>\n  <nb-card-body>\n    <img [src]=\"patient | image\" />\n  </nb-card-body>\n  <nb-card-footer>\n    <p><b>Fecha de nacimiento:</b> {{ patient.dateOfBirth | date }}</p>\n    <p><b>Género:</b> {{ patient.gender }}</p>\n    <p><b>Número de celular:</b> {{ patient.mobileNumber }}</p>\n  </nb-card-footer>\n</nb-card>\n\n<ng-template #loaderDiv>\n  <nb-card nbSpinner=\"true\" nbSpinnerSize=\"large\" nbSpinnerStatus=\"primary\">\n    <nb-card-body> Cargando datos del usuario... </nb-card-body></nb-card\n  >\n</ng-template>\n","import { OnInit } from '@angular/core';\nimport { Component, Input } from '@angular/core';\nimport { NbThemeService } from '@nebular/theme';\n\nimport { PatientDTO } from 'app/protected/interfaces/patient/Patient.interface';\nimport { patientsRoutes } from 'app/protected/routes/protected.routes';\n\ntype ButtonFontSize = 'tiny' | 'small';\ntype CardFontSize = 'tiny' | 'large';\n\n@Component({\n  selector: 'ngx-records-cards',\n  templateUrl: './records-cards.component.html',\n  styleUrls: ['./records-cards.component.scss'],\n})\nexport class RecordsCardsComponent implements OnInit {\n  viewHistoryBaseRoute: string = patientsRoutes.viewPatientHistoryBase;\n  addSingleRecordBaseRoute: string = patientsRoutes.addSinglePatientRecordBase;\n\n  screenSizeBig: boolean = false;\n\n  cardTitle: string = 'Lista de pacientes';\n\n  constructor(private themeServiceService: NbThemeService) {}\n\n  ngOnInit(): void {\n    const $mediaQuery = this.themeServiceService.onMediaQueryChange();\n    $mediaQuery.subscribe((mediaBreakPoint) => {\n      const newValue = mediaBreakPoint[1];\n      if (newValue.width <= 576) this.screenSizeBig = false;\n      else this.screenSizeBig = true;\n    });\n  }\n\n  get buttonFontSize(): ButtonFontSize {\n    return this.screenSizeBig ? 'small' : 'tiny';\n  }\n\n  get cardFontSize(): CardFontSize {\n    return this.screenSizeBig ? 'large' : 'tiny';\n  }\n\n  get historyButtonTag(): string {\n    return this.screenSizeBig ? 'Historia clínica' : 'H';\n  }\n\n  get addRecordButtonTag(): string {\n    return this.screenSizeBig ? 'Agregar registro' : '+';\n  }\n\n  @Input() users!: PatientDTO[];\n}\n","<nb-card *ngIf=\"!screenSizeBig\">\n  <nb-card-body class=\"contact\">\n    <small>H: Historia clínica</small><small>+: Agregar registro</small>\n  </nb-card-body>\n</nb-card>\n<nb-card *ngIf=\"users; else loaderDiv\">\n  <nb-card-header>{{ cardTitle }}</nb-card-header>\n  <nb-card-body>\n    <nb-list>\n      <nb-list-item class=\"contact\" *ngFor=\"let user of users\">\n        <nb-user\n          [picture]=\"user | image\"\n          [name]=\"user.firstName + ' ' + user.lastName\"\n          [size]=\"cardFontSize\"\n        ></nb-user>\n        <div class=\"actions-btn-container\">\n          <button\n            class=\"actions-btn--btn\"\n            type=\"button\"\n            nbButton\n            outline\n            shape=\"semi-round\"\n            status=\"primary\"\n            [size]=\"buttonFontSize\"\n            [routerLink]=\"[viewHistoryBaseRoute, user.id]\"\n          >\n            {{ historyButtonTag }}\n          </button>\n          <button\n            class=\"actions-btn--btn\"\n            type=\"button\"\n            nbButton\n            outline\n            shape=\"semi-round\"\n            status=\"primary\"\n            [size]=\"buttonFontSize\"\n            [routerLink]=\"[addSingleRecordBaseRoute, user.id]\"\n          >\n            {{ addRecordButtonTag }}\n          </button>\n        </div>\n      </nb-list-item>\n    </nb-list>\n  </nb-card-body>\n</nb-card>\n\n<ng-template #loaderDiv>\n  <nb-card nbSpinner=\"true\" nbSpinnerSize=\"large\" nbSpinnerStatus=\"primary\">\n    <nb-card-body> Cargando usuarios... </nb-card-body></nb-card\n  >\n</ng-template>\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'ngx-simple-date-picker',\n  templateUrl: './simple-date-picker.component.html',\n  styleUrls: ['./simple-date-picker.component.scss'],\n})\nexport class SimpleDatePickerComponent implements OnInit {\n  public datepickerForm: FormControl | undefined;\n\n  @Input() inputDate: Date | undefined;\n\n  @Input() datePickerTitle: string = 'Fecha del registro';\n\n  @Input() datePickerPlaceHolder: string = 'Ingrese la fecha';\n\n  @Output() datePickerDate: EventEmitter<Date> = new EventEmitter<Date>();\n\n  constructor() {}\n\n  ngOnInit(): void {\n    if (this.inputDate !== undefined) {\n      this.datepickerForm = new FormControl(new Date(this.inputDate));\n    } else {\n      this.datepickerForm = new FormControl('');\n    }\n  }\n\n  onDatePicked(inputElement: Date | null) {\n    if (this.isInputAValidDate(inputElement)) {\n      this.datePickerDate.emit(inputElement);\n    } else {\n      return;\n    }\n  }\n\n  isInputAValidDate(date: any): boolean {\n    return (\n      date &&\n      Object.prototype.toString.call(date) === '[object Date]' &&\n      !isNaN(date)\n    );\n  }\n}\n","<nb-card>\n  <nb-card-header class=\"text-center\">{{ datePickerTitle }}</nb-card-header>\n  <nb-card-body>\n    <input\n      nbInput\n      fullWidth\n      [formControl]=\"datepickerForm\"\n      [placeholder]=\"datePickerPlaceHolder\"\n      [nbDatepicker]=\"formpicker\"\n      (ngModelChange)=\"onDatePicked($event)\"\n    />\n    <nb-datepicker #formpicker></nb-datepicker>\n  </nb-card-body>\n</nb-card>\n","import { Component, Input } from '@angular/core';\n\nimport { Record } from 'app/protected/interfaces/records/responses/PatientClinicalHistoryResponse.interface';\nimport { patientsRoutes } from 'app/protected/routes/protected.routes';\n\n@Component({\n  selector: 'ngx-simple-record',\n  templateUrl: './simple-record.component.html',\n  styleUrls: ['./simple-record.component.scss'],\n})\nexport class SimpleRecordComponent {\n  public recordEditionBaseRoute: string = patientsRoutes.editSinglePatientRecordBase;\n\n  @Input() record: Record | undefined;\n\n  constructor() {}\n}\n","<nb-card>\n  <nb-flip-card>\n    <nb-card-front>\n      <nb-card>\n        <nb-card-header>{{ record.dateTime | date }}</nb-card-header>\n        <nb-card-body>\n          <p>{{ record.medicalCondition }}</p>\n        </nb-card-body>\n        <nb-card-footer>\n          <button\n            nbButton\n            status=\"info\"\n            outline\n            [routerLink]=\"[recordEditionBaseRoute, record.id]\"\n          >\n            Editar\n          </button>\n        </nb-card-footer>\n      </nb-card>\n    </nb-card-front>\n    <nb-card-back>\n      <nb-card>\n        <nb-card-header>Última vez tratado por:</nb-card-header>\n        <nb-card-body>\n          {{ record.updatedBy.firstName }} {{ record.updatedBy.lastName }}\n          <br />\n          {{ record.updatedBy.mobileNumber }}\n        </nb-card-body>\n      </nb-card>\n    </nb-card-back>\n  </nb-flip-card>\n</nb-card>\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'ngx-simple-text-area',\n  templateUrl: './simple-text-area.component.html',\n  styleUrls: ['./simple-text-area.component.scss'],\n})\nexport class SimpleTextAreaComponent implements OnInit {\n  public textAreaData: string = '';\n\n  @Input() inputText: string | undefined;\n\n  @Input() textAreaTitle: string = 'Nuevo registro clínico del paciente';\n\n  @Input() textAreaPlaceHolder: string = 'Nueva entrada';\n\n  @Output() textAreaValue: EventEmitter<string> = new EventEmitter<string>();\n\n  constructor() {}\n\n  ngOnInit(): void {\n    if (this.inputText !== undefined) {\n      this.textAreaData = this.inputText;\n    }\n  }\n\n  onTextAreaChange(data: string) {\n    this.textAreaValue.emit(data);\n  }\n}\n","<nb-card>\n  <nb-card-header class=\"text-center\">{{ textAreaTitle }}</nb-card-header>\n  <nb-card-body>\n    <textarea\n      rows=\"10\"\n      nbInput\n      fullWidth\n      [placeholder]=\"textAreaPlaceHolder\"\n      [(ngModel)]=\"textAreaData\"\n      (ngModelChange)=\"onTextAreaChange($event)\"\n    ></textarea>\n  </nb-card-body>\n</nb-card>\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\nimport { DialogService } from 'app/shared/services/dialog.service';\nimport {\n  UserCreation,\n  UserDTO,\n} from 'app/protected/interfaces/user/User.interface';\nimport { dashboardRoutes } from 'app/protected/routes/protected.routes';\n\n@Component({\n  selector: 'ngx-user-form',\n  templateUrl: './user-form.component.html',\n  styleUrls: ['./user-form.component.scss'],\n})\nexport class UserFormComponent implements OnInit {\n  public adminDoctorForm: FormGroup;\n\n  public displayErrorAlert: boolean = false;\n  public errorAlertMessage: string = '';\n\n  public deleteButtonHidden: boolean = true;\n\n  private passwordValidator = [Validators.minLength(6), Validators.required];\n\n  private imageHasChanged: boolean = false;\n\n  constructor(private fb: FormBuilder, private dialogService: DialogService) {}\n\n  @Input() user: UserDTO | undefined;\n\n  @Input() formTitle: string = 'Nuevo usuario';\n\n  @Input() confirmationButtonMessage: string = 'Registrar';\n\n  @Input() passwordRequired: boolean = true;\n\n  @Input() redirectOnCancelRoute: string = dashboardRoutes.main;\n\n  @Output() userCreation: EventEmitter<UserCreation> =\n    new EventEmitter<UserCreation>();\n\n  @Output() userDeletion: EventEmitter<string> = new EventEmitter<string>();\n\n  ngOnInit(): void {\n    this.adminDoctorForm = this.fb.group({\n      firstName: ['', Validators.required],\n      lastName: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      username: ['', Validators.required],\n      mobileNumber: ['', Validators.required],\n      password: '',\n      password2: '',\n      image: '',\n    });\n\n    if (this.passwordRequired) {\n      this.adminDoctorForm\n        .get('password')\n        ?.setValidators(this.passwordValidator);\n      this.adminDoctorForm\n        .get('password2')\n        ?.setValidators(this.passwordValidator);\n    }\n\n    if (this.user !== undefined) {\n      this.adminDoctorForm.patchValue(this.user);\n      this.deleteButtonHidden = false;\n      if (this.user.imageUrl) {\n        this.adminDoctorForm.get('image').setValue(this.user.imageUrl);\n      }\n    }\n  }\n\n  onFormSubmit() {\n    if (!this.passwordComparison()) return;\n    this.userCreation.emit({\n      firstName: this.adminDoctorForm.get('firstName').value,\n      lastName: this.adminDoctorForm.get('lastName').value,\n      email: this.adminDoctorForm.get('email').value,\n      username: this.adminDoctorForm.get('username').value,\n      mobileNumber: this.adminDoctorForm.get('mobileNumber').value,\n      ...(this.imageHasChanged && {\n        imageURI: this.adminDoctorForm.get('image').value,\n      }),\n      ...(this.adminDoctorForm.get('password').value && {\n        password: this.adminDoctorForm.get('password').value,\n      }),\n      ...(this.user && { id: this.user.id }),\n    });\n  }\n\n  onImageChange(imageURI: string) {\n    this.adminDoctorForm.get('image').setValue(imageURI);\n    this.imageHasChanged = true;\n  }\n\n  onUserDeletion() {\n    this.dialogService\n      .deletionConfirmationDialog()\n      .onClose.subscribe((confirmation) => {\n        if (confirmation) {\n          this.userDeletion.emit(this.user.id);\n        }\n      });\n  }\n\n  passwordComparison(): boolean {\n    const equalPasswords =\n      this.adminDoctorForm.get('password').value ===\n      this.adminDoctorForm.get('password2').value\n        ? true\n        : false;\n    if (!equalPasswords) {\n      this.displayErrorAlert = true;\n      this.errorAlertMessage = 'Las contraseñas no coinciden';\n    } else {\n      this.displayErrorAlert = false;\n      this.errorAlertMessage = '';\n    }\n    return equalPasswords;\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-md-5 col-xl-4\">\n    <ngx-input-img\n      (selectedInputImgURI)=\"onImageChange($event)\"\n      [genericUser]=\"user\"\n    ></ngx-input-img>\n  </div>\n  <div class=\"col-md-7 col-xl-8\">\n    <nb-alert status=\"danger\" [hidden]=\"!displayErrorAlert\">{{\n      errorAlertMessage\n    }}</nb-alert>\n    <form (submit)=\"onFormSubmit()\" [formGroup]=\"adminDoctorForm\">\n      <nb-card>\n        <nb-card-header>{{ formTitle }}</nb-card-header>\n        <nb-card-body>\n          <div class=\"full-name-inputs\">\n            <input\n              type=\"text\"\n              nbInput\n              fullWidth\n              shape=\"semi-round\"\n              placeholder=\"Nombres\"\n              formControlName=\"firstName\"\n            />\n            <input\n              type=\"text\"\n              nbInput\n              fullWidth\n              shape=\"semi-round\"\n              placeholder=\"Apellidos\"\n              formControlName=\"lastName\"\n            />\n          </div>\n          <input\n            type=\"email\"\n            nbInput\n            fullWidth\n            shape=\"semi-round\"\n            placeholder=\"Correo\"\n            formControlName=\"email\"\n          />\n          <input\n            type=\"text\"\n            nbInput\n            fullWidth\n            shape=\"semi-round\"\n            placeholder=\"Nombre de usuario\"\n            formControlName=\"username\"\n          />\n          <input\n            type=\"number\"\n            nbInput\n            fullWidth\n            shape=\"semi-round\"\n            placeholder=\"Celular\"\n            formControlName=\"mobileNumber\"\n          />\n          <input\n            type=\"password\"\n            nbInput\n            fullWidth\n            shape=\"semi-round\"\n            placeholder=\"Contraseña\"\n            formControlName=\"password\"\n          />\n          <input\n            type=\"password\"\n            nbInput\n            fullWidth\n            shape=\"semi-round\"\n            placeholder=\"Repita la contraseña\"\n            formControlName=\"password2\"\n          />\n          <hr />\n          <div class=\"confirmation-buttons\">\n            <button\n              type=\"submit\"\n              nbButton\n              status=\"primary\"\n              [disabled]=\"adminDoctorForm.invalid\"\n            >\n              {{ confirmationButtonMessage }}\n            </button>\n            <button\n              *ngIf=\"!deleteButtonHidden\"\n              (click)=\"onUserDeletion()\"\n              type=\"button\"\n              nbButton\n              status=\"danger\"\n            >\n              Eliminar\n            </button>\n            <button\n              type=\"button\"\n              nbButton\n              status=\"warning\"\n              [routerLink]=\"[redirectOnCancelRoute]\"\n            >\n              Cancelar\n            </button>\n          </div>\n        </nb-card-body>\n      </nb-card>\n    </form>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'ngx-user-info-card',\n  templateUrl: './user-info-card.component.html',\n  styleUrls: ['./user-info-card.component.scss'],\n})\nexport class UserInfoCardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>user-info-card works!</p>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { NbThemeService } from '@nebular/theme';\nimport { GenericUser } from 'app/protected/interfaces/user/GenericUser.interface';\n\ntype ButtonFontSize = 'tiny' | 'small';\ntype CardFontSize = 'tiny' | 'large';\n\n@Component({\n  selector: 'ngx-users-cards',\n  templateUrl: './users-cards.component.html',\n  styleUrls: ['./users-cards.component.scss'],\n})\nexport class UsersCardsComponent implements OnInit  {\n  screenSizeBig: boolean = false;\n\n  constructor(private themeServiceService: NbThemeService) {}\n\n  ngOnInit(): void {\n    const $mediaQuery = this.themeServiceService.onMediaQueryChange();\n    $mediaQuery.subscribe((mediaBreakPoint) => {\n      const newValue = mediaBreakPoint[1];\n      if (newValue.width <= 576) this.screenSizeBig = false;\n      else this.screenSizeBig = true;\n    });\n  }\n\n  get buttonFontSize(): ButtonFontSize {\n    return this.screenSizeBig ? 'small' : 'tiny';\n  }\n\n  get cardFontSize(): CardFontSize {\n    return this.screenSizeBig ? 'large' : 'tiny';\n  }\n\n  @Input() users!: GenericUser[];\n\n  @Input() baseRoute: string;\n\n  @Input() cardTitle: string = 'Lista de usuarios';\n\n  @Input() buttonAction: string = 'Editar';\n}\n","<nb-card *ngIf=\"users; else loaderDiv\">\n  <nb-card-header>{{ cardTitle }}</nb-card-header>\n  <nb-card-body>\n    <nb-list>\n      <nb-list-item class=\"contact\" *ngFor=\"let user of users\">\n        <nb-user\n          [picture]=\"user | image\"\n          [name]=\"user.firstName + ' ' + user.lastName\"\n          [title]=\"user.mobileNumber\"\n          [size]=\"cardFontSize\"\n        ></nb-user>\n        <button\n          type=\"button\"\n          nbButton\n          outline\n          shape=\"semi-round\"\n          status=\"primary\"\n          [size]=\"buttonFontSize\"\n          [routerLink]=\"[baseRoute, user.id]\"\n        >\n          {{ buttonAction }}\n        </button>\n      </nb-list-item>\n    </nb-list>\n  </nb-card-body>\n</nb-card>\n\n<ng-template #loaderDiv>\n  <nb-card nbSpinner=\"true\" nbSpinnerSize=\"large\" nbSpinnerStatus=\"primary\">\n    <nb-card-body> Cargando usuarios... </nb-card-body></nb-card\n  >\n</ng-template>\n","import { GenericUser } from '../interfaces/user/GenericUser.interface';\r\n\r\nexport const UsersMock: GenericUser[] = [\r\n  {\r\n    firstName: 'John',\r\n    lastName: 'Doe',\r\n    mobileNumber: 76151052,\r\n    id: '609d963af2b3480c3ca1a05c',\r\n  },\r\n  {\r\n    firstName: 'Juan José',\r\n    lastName: 'Rojas',\r\n    mobileNumber: 76151054,\r\n    imageUrl: 'https://imagessl.casadellibro.com/img/autores/79825.jpg',\r\n    id: '609d9f8470c9882968722a68',\r\n  },\r\n  {\r\n    firstName: 'Juan Carlos',\r\n    lastName: 'Pérez Gómez',\r\n    mobileNumber: 76151056,\r\n    id: '60a06d297cb4874418473a90',\r\n  },\r\n  {\r\n    firstName: 'Luis',\r\n    lastName: 'Perez Gomez',\r\n    mobileNumber: 76151058,\r\n    id: '60a14a6d8f57c2430486de14',\r\n  },\r\n  {\r\n    firstName: 'Paciente Masculino',\r\n    lastName: 'Test 1',\r\n    mobileNumber: 77141761,\r\n    id: '60a99562bfc2d52f80c5db2c',\r\n  },\r\n];\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'ngx-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss'],\n})\nexport class DashboardComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<p>dashboard works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { NbMenuItem } from '@nebular/theme';\n\nimport { ActiveUserService } from 'app/auth/services/active-user.service';\nimport { ThemeChangerService } from 'app/shared/services/theme-changer.service';\nimport { adminMenuItems } from './sidebar-admin-menu';\nimport { doctorMenuItems } from './sidebar-doctor-menu';\n\n@Component({\n  selector: 'ngx-layout',\n  templateUrl: './layout.component.html',\n  styleUrls: ['./layout.component.scss'],\n})\nexport class LayoutComponent implements OnInit {\n  sidebarMenu: NbMenuItem[] = [];\n\n  constructor(\n    private activeUserService: ActiveUserService,\n    private themeChangerService: ThemeChangerService,\n  ) {}\n\n  ngOnInit(): void {\n    if (this.activeUserService.activeUserRole === 'USER_ADMIN_ROLE') {\n      this.themeChangerService.setDarkTheme();\n      this.sidebarMenu = adminMenuItems;\n    } else {\n      this.themeChangerService.setDefaultTheme();\n      this.sidebarMenu = doctorMenuItems;\n    }\n  }\n}\n","<ngx-one-column-layout>\n  <nb-menu [items]=\"sidebarMenu\"></nb-menu>\n  <router-outlet></router-outlet>\n</ngx-one-column-layout>\n","import { NbMenuItem } from '@nebular/theme';\r\nimport {\r\n  adminsRoutes,\r\n  bedsRoutes,\r\n  dashboardRoutes,\r\n  devicesRoutes,\r\n  doctorsRoutes,\r\n  patientsRoutes,\r\n  roomsRoutes,\r\n} from 'app/protected/routes/protected.routes';\r\n\r\nexport const adminMenuItems: NbMenuItem[] = [\r\n  {\r\n    title: 'Dashboard',\r\n    icon: 'home-outline',\r\n    link: dashboardRoutes.main,\r\n    home: true,\r\n  },\r\n  {\r\n    title: 'USUARIOS',\r\n    group: true,\r\n  },\r\n  {\r\n    title: 'Administradores',\r\n    icon: 'settings-2-outline',\r\n    children: [\r\n      {\r\n        title: 'Registrar nuevo administrador',\r\n        link: adminsRoutes.registration,\r\n      },\r\n      {\r\n        title: 'Ver administradores activos',\r\n        link: adminsRoutes.viewAll,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    title: 'Médicos',\r\n    icon: 'person-add-outline',\r\n    children: [\r\n      {\r\n        title: 'Registrar nuevo médico',\r\n        link: doctorsRoutes.registration,\r\n      },\r\n      {\r\n        title: 'Ver médicos activos',\r\n        link: doctorsRoutes.viewAll,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    title: 'REGISTROS CLÍNICOS',\r\n    group: true,\r\n  },\r\n  {\r\n    title: 'Pacientes',\r\n    icon: 'person-outline',\r\n    children: [\r\n      {\r\n        title: 'Registrar nuevo paciente',\r\n        link: patientsRoutes.registration,\r\n      },\r\n      {\r\n        title: 'Editar o eliminar pacientes',\r\n        link: patientsRoutes.viewAll,\r\n      },\r\n      {\r\n        title: 'Ver o agregar registros',\r\n        link: patientsRoutes.addRecords,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    title: 'INFRAESTRUCTURA',\r\n    group: true,\r\n  },\r\n  {\r\n    title: 'Habitaciones',\r\n    icon: 'home-outline',\r\n    children: [\r\n      {\r\n        title: 'Registrar nueva habitación',\r\n        link: roomsRoutes.registration,\r\n      },\r\n      {\r\n        title: 'Inspeccionar habitaciones',\r\n        link: roomsRoutes.inspect,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    title: 'Camas',\r\n    icon: 'thermometer-plus-outline',\r\n    children: [\r\n      {\r\n        title: 'Registrar nueva cama',\r\n        link: bedsRoutes.registration,\r\n      },\r\n      {\r\n        title: 'Inspeccionar camas',\r\n        link: bedsRoutes.inspect,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    title: 'IOT',\r\n    group: true,\r\n  },\r\n  {\r\n    title: 'Dispositivos',\r\n    icon: 'radio-outline',\r\n    children: [\r\n      {\r\n        title: 'Registrar nuevo dispositivo',\r\n        link: devicesRoutes.registration,\r\n      },\r\n      {\r\n        title: 'Inspeccionar dispositivos',\r\n        link: devicesRoutes.inspect,\r\n      },\r\n    ],\r\n  },\r\n];\r\n","import { NbMenuItem } from '@nebular/theme';\r\nimport {\r\n  dashboardRoutes,\r\n  devicesRoutes,\r\n  doctorsRoutes,\r\n  patientsRoutes,\r\n} from 'app/protected/routes/protected.routes';\r\n\r\nexport const doctorMenuItems: NbMenuItem[] = [\r\n  {\r\n    title: 'Dashboard',\r\n    icon: 'home-outline',\r\n    link: dashboardRoutes.main,\r\n    home: true,\r\n  },\r\n  {\r\n    title: 'USUARIOS',\r\n    group: true,\r\n  },\r\n  {\r\n    title: 'Médicos',\r\n    icon: 'person-add-outline',\r\n    children: [\r\n      {\r\n        title: 'Ver médicos activos',\r\n        link: doctorsRoutes.viewAll,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    title: 'REGISTROS CLÍNICOS',\r\n    group: true,\r\n  },\r\n  {\r\n    title: 'Pacientes',\r\n    icon: 'person-outline',\r\n    children: [\r\n      {\r\n        title: 'Registrar nuevo paciente',\r\n        link: patientsRoutes.registration,\r\n      },\r\n      {\r\n        title: 'Editar o eliminar pacientes',\r\n        link: patientsRoutes.viewAll,\r\n      },\r\n      {\r\n        title: 'Ver o agregar registros',\r\n        link: patientsRoutes.addRecords,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    title: 'IOT',\r\n    group: true,\r\n  },\r\n  {\r\n    title: 'Dispositivos',\r\n    icon: 'radio-outline',\r\n    children: [\r\n      {\r\n        title: 'Registrar nuevo dispositivo',\r\n        link: devicesRoutes.registration,\r\n      },\r\n      {\r\n        title: 'Inspeccionar dispositivos',\r\n        link: devicesRoutes.inspect,\r\n      },\r\n    ],\r\n  },\r\n];\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { DashboardComponent } from './pages/dashboard/dashboard.component';\nimport { LayoutComponent } from './pages/layout/layout.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LayoutComponent,\n    children: [\n      {\n        path: 'dashboard',\n        component: DashboardComponent,\n      },\n      {\n        path: 'admins',\n        loadChildren: () =>\n          import('./pages/admins/admins.module').then((m) => m.AdminsModule),\n      },\n      {\n        path: 'doctors',\n        loadChildren: () =>\n          import('./pages/doctors/doctors.module').then((m) => m.DoctorsModule),\n      },\n      {\n        path: 'patients',\n        loadChildren: () =>\n          import('./pages/patients/patients.module').then((m) => m.PatientsModule),\n      },\n      {\n        path: '**',\n        redirectTo: 'dashboard',\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ProtectedRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { NbMenuModule } from '@nebular/theme';\nimport { ThemeModule } from '../@theme/theme.module';\n\nimport { ProtectedRoutingModule } from './protected-routing.module';\n\nimport { NebularModule } from 'app/shared/nebular/nebular.module';\nimport { SharedModule } from 'app/shared/shared.module';\n\nimport { DashboardComponent } from './pages/dashboard/dashboard.component';\nimport { LayoutComponent } from './pages/layout/layout.component';\nimport { UserFormComponent } from './components/user-form/user-form.component';\nimport { InputImgComponent } from './components/input-img/input-img.component';\nimport { UsersCardsComponent } from './components/users-cards/users-cards.component';\nimport { FilterBarComponent } from './components/filter-bar/filter-bar.component';\nimport { PatientFormComponent } from './components/patient-form/patient-form.component';\nimport { RecordsCardsComponent } from './components/records-cards/records-cards.component';\nimport { UserInfoCardComponent } from './components/user-info-card/user-info-card.component';\nimport { SimpleDatePickerComponent } from './components/simple-date-picker/simple-date-picker.component';\nimport { SimpleTextAreaComponent } from './components/simple-text-area/simple-text-area.component';\nimport { PatientInfoCardComponent } from './components/patient-info-card/patient-info-card.component';\nimport { SimpleRecordComponent } from './components/simple-record/simple-record.component';\n\n@NgModule({\n  declarations: [\n    DashboardComponent,\n    FilterBarComponent,\n    InputImgComponent,\n    LayoutComponent,\n    PatientFormComponent,\n    PatientInfoCardComponent,\n    RecordsCardsComponent,\n    SimpleDatePickerComponent,\n    SimpleTextAreaComponent,\n    UserFormComponent,\n    UserInfoCardComponent,\n    UsersCardsComponent,\n    SimpleRecordComponent,\n  ],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormsModule,\n    RouterModule,\n    ProtectedRoutingModule,\n    NbMenuModule,\n    ThemeModule,\n    NebularModule,\n    SharedModule,\n  ],\n  exports: [\n    FilterBarComponent,\n    InputImgComponent,\n    PatientFormComponent,\n    PatientInfoCardComponent,\n    RecordsCardsComponent,\n    SimpleDatePickerComponent,\n    SimpleTextAreaComponent,\n    UserFormComponent,\n    UserInfoCardComponent,\n    UsersCardsComponent,\n    SimpleRecordComponent,\n  ],\n})\nexport class ProtectedModule {}\n","import { Injectable } from '@angular/core';\nimport { NbDialogRef, NbDialogService } from '@nebular/theme';\n\nimport { UserDeletionConfirmationComponent } from '../components/user-deletion-confirmation/user-deletion-confirmation.component';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DialogService {\n  constructor(private dialogService: NbDialogService) {}\n\n  deletionConfirmationDialog(): NbDialogRef<UserDeletionConfirmationComponent> {\n    return this.dialogService.open(UserDeletionConfirmationComponent);\n  }\n}\n","export const toBase64URI = (file: File) => {\r\n  return new Promise<any>((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => resolve(reader.result);\r\n    reader.onerror = (error) => reject(error);\r\n  });\r\n};\r\n"],"sourceRoot":"webpack:///"}