{"version":3,"sources":["webpack:///src/app/auth/services/active-user.service.ts","webpack:///src/app/protected/components/filter-bar/filter-bar.component.ts","webpack:///src/app/protected/components/filter-bar/filter-bar.component.html","webpack:///src/app/protected/components/input-img/input-img.component.ts","webpack:///src/app/protected/components/input-img/input-img.component.html","webpack:///src/app/protected/components/patient-form/patient-form.component.ts","webpack:///src/app/protected/components/patient-form/patient-form.component.html","webpack:///src/app/protected/components/patient-info-card/patient-info-card.component.ts","webpack:///src/app/protected/components/patient-info-card/patient-info-card.component.html","webpack:///src/app/protected/components/records-cards/records-cards.component.ts","webpack:///src/app/protected/components/records-cards/records-cards.component.html","webpack:///src/app/protected/components/simple-date-picker/simple-date-picker.component.ts","webpack:///src/app/protected/components/simple-date-picker/simple-date-picker.component.html","webpack:///src/app/protected/components/simple-record/simple-record.component.ts","webpack:///src/app/protected/components/simple-record/simple-record.component.html","webpack:///src/app/protected/components/simple-text-area/simple-text-area.component.ts","webpack:///src/app/protected/components/simple-text-area/simple-text-area.component.html","webpack:///src/app/protected/components/user-form/user-form.component.ts","webpack:///src/app/protected/components/user-form/user-form.component.html","webpack:///src/app/protected/components/user-info-card/user-info-card.component.ts","webpack:///src/app/protected/components/user-info-card/user-info-card.component.html","webpack:///src/app/protected/components/users-cards/users-cards.component.ts","webpack:///src/app/protected/components/users-cards/users-cards.component.html","webpack:///src/app/protected/mocks/Users.mock.ts","webpack:///src/app/protected/pages/dashboard/dashboard.component.ts","webpack:///src/app/protected/pages/dashboard/dashboard.component.html","webpack:///src/app/protected/pages/layout/layout.component.ts","webpack:///src/app/protected/pages/layout/layout.component.html","webpack:///src/app/protected/pages/layout/sidebar-admin-menu.ts","webpack:///src/app/protected/pages/layout/sidebar-doctor-menu.ts","webpack:///src/app/protected/protected-routing.module.ts","webpack:///src/app/protected/protected.module.ts","webpack:///src/app/shared/services/dialog.service.ts","webpack:///src/app/shared/utils/toBase64URI.helpers.ts"],"names":["ActiveUserService","authService","user","activeUser","role","providedIn","FilterBarComponent","themeServiceService","filter","screenSizeBig","filterPlaceholder","filterTitle","queryParam","$mediaQuery","onMediaQueryChange","subscribe","mediaBreakPoint","newValue","width","emit","value","setValue","onSearchClick","selector","templateUrl","styleUrls","InputImgComponent","selectedInputImgURI","genericUser","event","target","files","file","type","split","then","base64Image","undefined","onImageChange","PatientFormComponent","fb","dialogService","displayErrorAlert","errorAlertMessage","deleteButtonHidden","imageHasChanged","formTitle","confirmationButtonMessage","redirectOnCancelRoute","viewAll","patientCreation","patientDeletion","patientForm","group","firstName","lastName","dateOfBirth","gender","mobileNumber","image","patient","patchValue","imageUrl","get","imageURI","deletionConfirmationDialog","onClose","confirmation","id","isDateOfBirthADate","date","Object","prototype","toString","call","isNaN","onFormSubmit","PatientInfoCardComponent","RecordsCardsComponent","viewHistoryBaseRoute","viewPatientHistoryBase","addSingleRecordBaseRoute","addSinglePatientRecordBase","cardTitle","users","SimpleDatePickerComponent","datePickerTitle","datePickerPlaceHolder","datePickerDate","inputDate","datepickerForm","Date","inputElement","isInputAValidDate","onDatePicked","SimpleRecordComponent","recordEditionBaseRoute","editSinglePatientRecordBase","record","SimpleTextAreaComponent","textAreaData","textAreaTitle","textAreaPlaceHolder","textAreaValue","inputText","data","onTextAreaChange","UserFormComponent","passwordValidator","minLength","required","passwordRequired","main","userCreation","userDeletion","adminDoctorForm","email","username","password","password2","setValidators","passwordComparison","equalPasswords","UserInfoCardComponent","UsersCardsComponent","buttonAction","baseRoute","UsersMock","DashboardComponent","LayoutComponent","activeUserService","themeChangerService","sidebarMenu","activeUserRole","setDarkTheme","setDefaultTheme","adminMenuItems","title","icon","link","home","children","registration","addRecords","inspect","doctorMenuItems","routes","path","component","loadChildren","m","AdminsModule","DoctorsModule","PatientsModule","redirectTo","ProtectedRoutingModule","forChild","imports","exports","ProtectedModule","declarations","DialogService","open","toBase64URI","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","error"],"mappings":"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","file":"protected-protected-module-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { AuthService } from './auth.service';\n\nimport { ActiveUser, ActiveUserRole } from 'app/auth/interfaces/ActiveUser.interface';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ActiveUserService {\n  constructor(private authService: AuthService) {}\n\n  get activeUser(): ActiveUser {\n    return { ...this.authService.user };\n  }\n\n  get activeUserRole(): ActiveUserRole {\n    return this.activeUser.role;\n  }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { NbThemeService } from '@nebular/theme';\n\ntype ButtonFontSize = 'tiny' | 'small';\n\n@Component({\n  selector: 'ngx-filter-bar',\n  templateUrl: './filter-bar.component.html',\n  styleUrls: ['./filter-bar.component.scss'],\n})\nexport class FilterBarComponent implements OnInit {\n  filter: FormControl = new FormControl('');\n  screenSizeBig: boolean = false;\n\n  constructor(private themeServiceService: NbThemeService) {}\n\n  ngOnInit(): void {\n    const $mediaQuery = this.themeServiceService.onMediaQueryChange();\n    $mediaQuery.subscribe((mediaBreakPoint) => {\n      const newValue = mediaBreakPoint[1];\n      if (newValue.width <= 576) this.screenSizeBig = false;\n      else this.screenSizeBig = true;\n    });\n  }\n\n  get buttonFontSize(): ButtonFontSize {\n    return this.screenSizeBig ? 'small' : 'tiny';\n  }\n\n  @Input() filterPlaceholder: string = 'Nombre a filtrar';\n\n  @Input() filterTitle: string = 'Filtrar por nombre';\n\n  @Output() queryParam: EventEmitter<string> = new EventEmitter<string>();\n\n  onSearchClick() {\n    this.queryParam.emit(this.filter.value);\n    this.filter.setValue('');\n  }\n}\n","<nb-card class=\"inline-form-card\">\n  <nb-card-header>{{ filterTitle }}</nb-card-header>\n  <nb-card-body>\n    <form class=\"form-inline\">\n      <input\n        type=\"text\"\n        nbInput\n        fullWidth\n        [placeholder]=\"filterPlaceholder\"\n        [formControl]=\"filter\"\n      />\n      <button\n        type=\"button\"\n        nbButton\n        outline\n        shape=\"semi-round\"\n        status=\"primary\"\n        [size]=\"buttonFontSize\"\n        (click)=\"onSearchClick()\"\n      >\n        Buscar\n      </button>\n    </form>\n  </nb-card-body>\n</nb-card>\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\nimport { GenericUser } from 'app/protected/interfaces/user/GenericUser.interface';\nimport { toBase64URI } from 'app/shared/utils/toBase64URI.helpers';\nimport { UsersMock } from 'app/protected/mocks/Users.mock';\n\n@Component({\n  selector: 'ngx-input-img',\n  templateUrl: './input-img.component.html',\n  styleUrls: ['./input-img.component.scss'],\n})\nexport class InputImgComponent implements OnInit {\n  base64Image: string | undefined;\n\n  constructor() {}\n\n  @Input() genericUser: GenericUser | undefined;\n\n  @Output() selectedInputImgURI: EventEmitter<string> = new EventEmitter<string>();\n\n  ngOnInit(): void {\n    if (!this.genericUser) {\n      this.genericUser = UsersMock[0];\n    }\n  }\n\n  onImageChange(event: Event) {\n    const target = event.target as HTMLInputElement;\n    const files = target.files as FileList;\n    const file: File = files[0];\n    if (file.type.split('/')[0] !== 'image') return;\n    toBase64URI(file).then((value) => {\n      this.base64Image = value;\n      this.selectedInputImgURI.emit(value);\n    });\n    this.genericUser = undefined;\n  }\n}\n","<div class=\"file-upload__element\">\n  <div *ngIf=\"base64Image\">\n    <img [src]=\"base64Image\" />\n  </div>\n\n  <div *ngIf=\"genericUser\">\n    <img [src]=\"genericUser | image\" />\n  </div>\n</div>\n\n<div class=\"file-upload__element\">\n  <button type=\"button\" nbButton status=\"primary\" (click)=\"fileInput.click()\">\n    Seleccionar imagen\n  </button>\n  <input type=\"file\" hidden #fileInput (change)=\"onImageChange($event)\" />\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\nimport { DialogService } from 'app/shared/services/dialog.service';\n\nimport {\n  PatientCreation,\n  PatientDTO,\n} from 'app/protected/interfaces/patient/Patient.interface';\nimport { patientsRoutes } from 'app/protected/routes/protected.routes';\n\n@Component({\n  selector: 'ngx-patient-form',\n  templateUrl: './patient-form.component.html',\n  styleUrls: ['./patient-form.component.scss'],\n})\nexport class PatientFormComponent implements OnInit {\n  public patientForm: FormGroup;\n\n  public displayErrorAlert: boolean = false;\n  public errorAlertMessage: string = '';\n\n  public deleteButtonHidden: boolean = true;\n\n  private imageHasChanged: boolean = false;\n\n  constructor(private fb: FormBuilder, private dialogService: DialogService) {}\n\n  @Input() patient: PatientDTO | undefined;\n\n  @Input() formTitle: string = 'Nuevo paciente';\n\n  @Input() confirmationButtonMessage: string = 'Registrar';\n\n  @Input() redirectOnCancelRoute: string = patientsRoutes.viewAll;\n\n  @Output() patientCreation: EventEmitter<PatientCreation> = new EventEmitter<PatientCreation>();\n\n  @Output() patientDeletion: EventEmitter<string> = new EventEmitter<string>();\n\n  ngOnInit(): void {\n    this.patientForm = this.fb.group({\n      firstName: '',\n      lastName: '',\n      dateOfBirth: '',\n      gender: '',\n      mobileNumber: '',\n      image: '',\n    });\n\n    if (this.patient !== undefined) {\n      this.patientForm.patchValue(this.patient);\n      this.deleteButtonHidden = false;\n      if (this.patient.imageUrl) {\n        this.patientForm.get('image').setValue(this.patient.imageUrl);\n      }\n    }\n  }\n\n  onImageChange(imageURI: string) {\n    this.patientForm.get('image').setValue(imageURI);\n    this.imageHasChanged = true;\n  }\n\n  onPatientDeletion() {\n    this.dialogService\n      .deletionConfirmationDialog()\n      .onClose.subscribe((confirmation) => {\n        if (confirmation) {\n          this.patientDeletion.emit(this.patient.id);\n        }\n      });\n  }\n\n  onFormSubmit() {\n    this.patientCreation.emit({\n      firstName: this.patientForm.get('firstName').value,\n      lastName: this.patientForm.get('lastName').value,\n      dateOfBirth: this.patientForm.get('dateOfBirth').value,\n      gender: this.patientForm.get('gender').value,\n      mobileNumber: this.patientForm.get('mobileNumber').value,\n      ...(this.imageHasChanged && {\n        imageURI: this.patientForm.get('image').value,\n      }),\n      ...(this.patient && { id: this.patient.id }),\n    });\n  }\n\n  isFormInvalid(): boolean {\n    if (\n      this.patientForm.get('firstName').value !== '' &&\n      this.patientForm.get('lastName').value !== '' &&\n      this.patientForm.get('gender').value !== '' &&\n      this.patientForm.get('mobileNumber').value !== '' &&\n      this.isDateOfBirthADate(this.patientForm.get('dateOfBirth').value)\n    ) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  isDateOfBirthADate(date: any): boolean {\n    return (\n      date &&\n      Object.prototype.toString.call(date) === '[object Date]' &&\n      !isNaN(date)\n    );\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-md-5 col-xl-4\">\n    <ngx-input-img\n      (selectedInputImgURI)=\"onImageChange($event)\"\n      [genericUser]=\"patient\"\n    ></ngx-input-img>\n  </div>\n  <div class=\"col-md-7 col-xl-8\">\n    <nb-alert status=\"danger\" [hidden]=\"!displayErrorAlert\">{{\n      errorAlertMessage\n    }}</nb-alert>\n    <form (submit)=\"onFormSubmit()\" [formGroup]=\"patientForm\">\n      <nb-card>\n        <nb-card-header>{{ formTitle }}</nb-card-header>\n        <nb-card-body>\n          <div class=\"full-name-inputs\">\n            <input\n              type=\"text\"\n              nbInput\n              fullWidth\n              shape=\"semi-round\"\n              placeholder=\"Nombres\"\n              formControlName=\"firstName\"\n            />\n            <input\n              type=\"text\"\n              nbInput\n              fullWidth\n              shape=\"semi-round\"\n              placeholder=\"Apellidos\"\n              formControlName=\"lastName\"\n            />\n          </div>\n          <input\n            type=\"number\"\n            nbInput\n            fullWidth\n            shape=\"semi-round\"\n            placeholder=\"Celular\"\n            formControlName=\"mobileNumber\"\n          />\n          <div class=\"form-group row\">\n            <label class=\"col text-center\">Género</label>\n            <div class=\"col\">\n              <nb-radio-group formControlName=\"gender\">\n                <nb-radio value=\"Masculino\">Masculino</nb-radio>\n                <nb-radio value=\"Femenino\">Femenino</nb-radio>\n              </nb-radio-group>\n            </div>\n          </div>\n          <div class=\"form-group row\">\n            <div class=\"col text-center\">\n              <input\n                nbInput\n                placeholder=\"Fecha de nacimiento\"\n                [nbDatepicker]=\"formpicker\"\n                formControlName=\"dateOfBirth\"\n              />\n              <nb-datepicker #formpicker></nb-datepicker>\n            </div>\n          </div>\n          <hr />\n          <div class=\"confirmation-buttons\">\n            <button\n              type=\"submit\"\n              nbButton\n              status=\"primary\"\n              [disabled]=\"isFormInvalid()\"\n            >\n              {{ confirmationButtonMessage }}\n            </button>\n            <button\n              *ngIf=\"!deleteButtonHidden\"\n              (click)=\"onPatientDeletion()\"\n              type=\"button\"\n              nbButton\n              status=\"danger\"\n            >\n              Eliminar\n            </button>\n            <button\n              type=\"button\"\n              nbButton\n              status=\"warning\"\n              [routerLink]=\"[redirectOnCancelRoute]\"\n            >\n              Cancelar\n            </button>\n          </div>\n        </nb-card-body>\n      </nb-card>\n    </form>\n  </div>\n</div>\n","import { Component, Input } from '@angular/core';\nimport { PatientDTO } from 'app/protected/interfaces/patient/Patient.interface';\n\n@Component({\n  selector: 'ngx-patient-info-card',\n  templateUrl: './patient-info-card.component.html',\n  styleUrls: ['./patient-info-card.component.scss'],\n})\nexport class PatientInfoCardComponent {\n  @Input() patient: PatientDTO | undefined;\n\n  constructor() {}\n}\n","<nb-card *ngIf=\"patient; else loaderDiv\">\n  <nb-card-header class=\"text-center\">\n    {{ patient.firstName }} {{ patient.lastName }}\n  </nb-card-header>\n  <nb-card-body>\n    <img [src]=\"patient | image\" />\n  </nb-card-body>\n  <nb-card-footer>\n    <p><b>Fecha de nacimiento:</b> {{ patient.dateOfBirth | date }}</p>\n    <p><b>Género:</b> {{ patient.gender }}</p>\n    <p><b>Número de celular:</b> {{ patient.mobileNumber }}</p>\n  </nb-card-footer>\n</nb-card>\n\n<ng-template #loaderDiv>\n  <nb-card nbSpinner=\"true\" nbSpinnerSize=\"large\" nbSpinnerStatus=\"primary\">\n    <nb-card-body> Cargando datos del usuario... </nb-card-body></nb-card\n  >\n</ng-template>\n","import { OnInit } from '@angular/core';\nimport { Component, Input } from '@angular/core';\nimport { NbThemeService } from '@nebular/theme';\n\nimport { PatientDTO } from 'app/protected/interfaces/patient/Patient.interface';\nimport { patientsRoutes } from 'app/protected/routes/protected.routes';\n\ntype ButtonFontSize = 'tiny' | 'small';\ntype CardFontSize = 'tiny' | 'large';\n\n@Component({\n  selector: 'ngx-records-cards',\n  templateUrl: './records-cards.component.html',\n  styleUrls: ['./records-cards.component.scss'],\n})\nexport class RecordsCardsComponent implements OnInit {\n  viewHistoryBaseRoute: string = patientsRoutes.viewPatientHistoryBase;\n  addSingleRecordBaseRoute: string = patientsRoutes.addSinglePatientRecordBase;\n\n  screenSizeBig: boolean = false;\n\n  cardTitle: string = 'Lista de pacientes';\n\n  constructor(private themeServiceService: NbThemeService) {}\n\n  ngOnInit(): void {\n    const $mediaQuery = this.themeServiceService.onMediaQueryChange();\n    $mediaQuery.subscribe((mediaBreakPoint) => {\n      const newValue = mediaBreakPoint[1];\n      if (newValue.width <= 576) this.screenSizeBig = false;\n      else this.screenSizeBig = true;\n    });\n  }\n\n  get buttonFontSize(): ButtonFontSize {\n    return this.screenSizeBig ? 'small' : 'tiny';\n  }\n\n  get cardFontSize(): CardFontSize {\n    return this.screenSizeBig ? 'large' : 'tiny';\n  }\n\n  get historyButtonTag(): string {\n    return this.screenSizeBig ? 'Historia clínica' : 'H';\n  }\n\n  get addRecordButtonTag(): string {\n    return this.screenSizeBig ? 'Agregar registro' : '+';\n  }\n\n  @Input() users!: PatientDTO[];\n}\n","<nb-card *ngIf=\"!screenSizeBig\">\n  <nb-card-body class=\"contact\">\n    <small>H: Historia clínica</small><small>+: Agregar registro</small>\n  </nb-card-body>\n</nb-card>\n<nb-card *ngIf=\"users; else loaderDiv\">\n  <nb-card-header>{{ cardTitle }}</nb-card-header>\n  <nb-card-body>\n    <nb-list>\n      <nb-list-item class=\"contact\" *ngFor=\"let user of users\">\n        <nb-user\n          [picture]=\"user | image\"\n          [name]=\"user.firstName + ' ' + user.lastName\"\n          [size]=\"cardFontSize\"\n        ></nb-user>\n        <div class=\"actions-btn-container\">\n          <button\n            class=\"actions-btn--btn\"\n            type=\"button\"\n            nbButton\n            outline\n            shape=\"semi-round\"\n            status=\"primary\"\n            [size]=\"buttonFontSize\"\n            [routerLink]=\"[viewHistoryBaseRoute, user.id]\"\n          >\n            {{ historyButtonTag }}\n          </button>\n          <button\n            class=\"actions-btn--btn\"\n            type=\"button\"\n            nbButton\n            outline\n            shape=\"semi-round\"\n            status=\"primary\"\n            [size]=\"buttonFontSize\"\n            [routerLink]=\"[addSingleRecordBaseRoute, user.id]\"\n          >\n            {{ addRecordButtonTag }}\n          </button>\n        </div>\n      </nb-list-item>\n    </nb-list>\n  </nb-card-body>\n</nb-card>\n\n<ng-template #loaderDiv>\n  <nb-card nbSpinner=\"true\" nbSpinnerSize=\"large\" nbSpinnerStatus=\"primary\">\n    <nb-card-body> Cargando usuarios... </nb-card-body></nb-card\n  >\n</ng-template>\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'ngx-simple-date-picker',\n  templateUrl: './simple-date-picker.component.html',\n  styleUrls: ['./simple-date-picker.component.scss'],\n})\nexport class SimpleDatePickerComponent implements OnInit {\n  public datepickerForm: FormControl | undefined;\n\n  @Input() inputDate: Date | undefined;\n\n  @Input() datePickerTitle: string = 'Fecha del registro';\n\n  @Input() datePickerPlaceHolder: string = 'Ingrese la fecha';\n\n  @Output() datePickerDate: EventEmitter<Date> = new EventEmitter<Date>();\n\n  constructor() {}\n\n  ngOnInit(): void {\n    if (this.inputDate !== undefined) {\n      this.datepickerForm = new FormControl(new Date(this.inputDate));\n    } else {\n      this.datepickerForm = new FormControl('');\n    }\n  }\n\n  onDatePicked(inputElement: Date | null) {\n    if (this.isInputAValidDate(inputElement)) {\n      this.datePickerDate.emit(inputElement);\n    } else {\n      return;\n    }\n  }\n\n  isInputAValidDate(date: any): boolean {\n    return (\n      date &&\n      Object.prototype.toString.call(date) === '[object Date]' &&\n      !isNaN(date)\n    );\n  }\n}\n","<nb-card>\n  <nb-card-header class=\"text-center\">{{ datePickerTitle }}</nb-card-header>\n  <nb-card-body>\n    <input\n      nbInput\n      fullWidth\n      [formControl]=\"datepickerForm\"\n      [placeholder]=\"datePickerPlaceHolder\"\n      [nbDatepicker]=\"formpicker\"\n      (ngModelChange)=\"onDatePicked($event)\"\n    />\n    <nb-datepicker #formpicker></nb-datepicker>\n  </nb-card-body>\n</nb-card>\n","import { Component, Input } from '@angular/core';\n\nimport { Record } from 'app/protected/interfaces/records/responses/PatientClinicalHistoryResponse.interface';\nimport { patientsRoutes } from 'app/protected/routes/protected.routes';\n\n@Component({\n  selector: 'ngx-simple-record',\n  templateUrl: './simple-record.component.html',\n  styleUrls: ['./simple-record.component.scss'],\n})\nexport class SimpleRecordComponent {\n  public recordEditionBaseRoute: string = patientsRoutes.editSinglePatientRecordBase;\n\n  @Input() record: Record | undefined;\n\n  constructor() {}\n}\n","<nb-card>\n  <nb-flip-card>\n    <nb-card-front>\n      <nb-card>\n        <nb-card-header>{{ record.dateTime | date }}</nb-card-header>\n        <nb-card-body>\n          <p>{{ record.medicalCondition }}</p>\n        </nb-card-body>\n        <nb-card-footer>\n          <button\n            nbButton\n            status=\"info\"\n            outline\n            [routerLink]=\"[recordEditionBaseRoute, record.id]\"\n          >\n            Editar\n          </button>\n        </nb-card-footer>\n      </nb-card>\n    </nb-card-front>\n    <nb-card-back>\n      <nb-card>\n        <nb-card-header>Última vez tratado por:</nb-card-header>\n        <nb-card-body>\n          {{ record.updatedBy.firstName }} {{ record.updatedBy.lastName }}\n          <br />\n          {{ record.updatedBy.mobileNumber }}\n        </nb-card-body>\n      </nb-card>\n    </nb-card-back>\n  </nb-flip-card>\n</nb-card>\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'ngx-simple-text-area',\n  templateUrl: './simple-text-area.component.html',\n  styleUrls: ['./simple-text-area.component.scss'],\n})\nexport class SimpleTextAreaComponent implements OnInit {\n  public textAreaData: string = '';\n\n  @Input() inputText: string | undefined;\n\n  @Input() textAreaTitle: string = 'Nuevo registro clínico del paciente';\n\n  @Input() textAreaPlaceHolder: string = 'Nueva entrada';\n\n  @Output() textAreaValue: EventEmitter<string> = new EventEmitter<string>();\n\n  constructor() {}\n\n  ngOnInit(): void {\n    if (this.inputText !== undefined) {\n      this.textAreaData = this.inputText;\n    }\n  }\n\n  onTextAreaChange(data: string) {\n    this.textAreaValue.emit(data);\n  }\n}\n","<nb-card>\n  <nb-card-header class=\"text-center\">{{ textAreaTitle }}</nb-card-header>\n  <nb-card-body>\n    <textarea\n      rows=\"10\"\n      nbInput\n      fullWidth\n      [placeholder]=\"textAreaPlaceHolder\"\n      [(ngModel)]=\"textAreaData\"\n      (ngModelChange)=\"onTextAreaChange($event)\"\n    ></textarea>\n  </nb-card-body>\n</nb-card>\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\nimport { DialogService } from 'app/shared/services/dialog.service';\nimport {\n  UserCreation,\n  UserDTO,\n} from 'app/protected/interfaces/user/User.interface';\nimport { dashboardRoutes } from 'app/protected/routes/protected.routes';\n\n@Component({\n  selector: 'ngx-user-form',\n  templateUrl: './user-form.component.html',\n  styleUrls: ['./user-form.component.scss'],\n})\nexport class UserFormComponent implements OnInit {\n  public adminDoctorForm: FormGroup;\n\n  public displayErrorAlert: boolean = false;\n  public errorAlertMessage: string = '';\n\n  public deleteButtonHidden: boolean = true;\n\n  private passwordValidator = [Validators.minLength(6), Validators.required];\n\n  private imageHasChanged: boolean = false;\n\n  constructor(private fb: FormBuilder, private dialogService: DialogService) {}\n\n  @Input() user: UserDTO | undefined;\n\n  @Input() formTitle: string = 'Nuevo usuario';\n\n  @Input() confirmationButtonMessage: string = 'Registrar';\n\n  @Input() passwordRequired: boolean = true;\n\n  @Input() redirectOnCancelRoute: string = dashboardRoutes.main;\n\n  @Output() userCreation: EventEmitter<UserCreation> =\n    new EventEmitter<UserCreation>();\n\n  @Output() userDeletion: EventEmitter<string> = new EventEmitter<string>();\n\n  ngOnInit(): void {\n    this.adminDoctorForm = this.fb.group({\n      firstName: ['', Validators.required],\n      lastName: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      username: ['', Validators.required],\n      mobileNumber: ['', Validators.required],\n      password: '',\n      password2: '',\n      image: '',\n    });\n\n    if (this.passwordRequired) {\n      this.adminDoctorForm\n        .get('password')\n        ?.setValidators(this.passwordValidator);\n      this.adminDoctorForm\n        .get('password2')\n        ?.setValidators(this.passwordValidator);\n    }\n\n    if (this.user !== undefined) {\n      this.adminDoctorForm.patchValue(this.user);\n      this.deleteButtonHidden = false;\n      if (this.user.imageUrl) {\n        this.adminDoctorForm.get('image').setValue(this.user.imageUrl);\n      }\n    }\n  }\n\n  onFormSubmit() {\n    if (!this.passwordComparison()) return;\n    this.userCreation.emit({\n      firstName: this.adminDoctorForm.get('firstName').value,\n      lastName: this.adminDoctorForm.get('lastName').value,\n      email: this.adminDoctorForm.get('email').value,\n      username: this.adminDoctorForm.get('username').value,\n      mobileNumber: this.adminDoctorForm.get('mobileNumber').value,\n      ...(this.imageHasChanged && {\n        imageURI: this.adminDoctorForm.get('image').value,\n      }),\n      ...(this.adminDoctorForm.get('password').value && {\n        password: this.adminDoctorForm.get('password').value,\n      }),\n      ...(this.user && { id: this.user.id }),\n    });\n  }\n\n  onImageChange(imageURI: string) {\n    this.adminDoctorForm.get('image').setValue(imageURI);\n    this.imageHasChanged = true;\n  }\n\n  onUserDeletion() {\n    this.dialogService\n      .deletionConfirmationDialog()\n      .onClose.subscribe((confirmation) => {\n        if (confirmation) {\n          this.userDeletion.emit(this.user.id);\n        }\n      });\n  }\n\n  passwordComparison(): boolean {\n    const equalPasswords =\n      this.adminDoctorForm.get('password').value ===\n      this.adminDoctorForm.get('password2').value\n        ? true\n        : false;\n    if (!equalPasswords) {\n      this.displayErrorAlert = true;\n      this.errorAlertMessage = 'Las contraseñas no coinciden';\n    } else {\n      this.displayErrorAlert = false;\n      this.errorAlertMessage = '';\n    }\n    return equalPasswords;\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-md-5 col-xl-4\">\n    <ngx-input-img\n      (selectedInputImgURI)=\"onImageChange($event)\"\n      [genericUser]=\"user\"\n    ></ngx-input-img>\n  </div>\n  <div class=\"col-md-7 col-xl-8\">\n    <nb-alert status=\"danger\" [hidden]=\"!displayErrorAlert\">{{\n      errorAlertMessage\n    }}</nb-alert>\n    <form (submit)=\"onFormSubmit()\" [formGroup]=\"adminDoctorForm\">\n      <nb-card>\n        <nb-card-header>{{ formTitle }}</nb-card-header>\n        <nb-card-body>\n          <div class=\"full-name-inputs\">\n            <input\n              type=\"text\"\n              nbInput\n              fullWidth\n              shape=\"semi-round\"\n              placeholder=\"Nombres\"\n              formControlName=\"firstName\"\n            />\n            <input\n              type=\"text\"\n              nbInput\n              fullWidth\n              shape=\"semi-round\"\n              placeholder=\"Apellidos\"\n              formControlName=\"lastName\"\n            />\n          </div>\n          <input\n            type=\"email\"\n            nbInput\n            fullWidth\n            shape=\"semi-round\"\n            placeholder=\"Correo\"\n            formControlName=\"email\"\n          />\n          <input\n            type=\"text\"\n            nbInput\n            fullWidth\n            shape=\"semi-round\"\n            placeholder=\"Nombre de usuario\"\n            formControlName=\"username\"\n          />\n          <input\n            type=\"number\"\n            nbInput\n            fullWidth\n            shape=\"semi-round\"\n            placeholder=\"Celular\"\n            formControlName=\"mobileNumber\"\n          />\n          <input\n            type=\"password\"\n            nbInput\n            fullWidth\n            shape=\"semi-round\"\n            placeholder=\"Contraseña\"\n            formControlName=\"password\"\n          />\n          <input\n            type=\"password\"\n            nbInput\n            fullWidth\n            shape=\"semi-round\"\n            placeholder=\"Repita la contraseña\"\n            formControlName=\"password2\"\n          />\n          <hr />\n          <div class=\"confirmation-buttons\">\n            <button\n              type=\"submit\"\n              nbButton\n              status=\"primary\"\n              [disabled]=\"adminDoctorForm.invalid\"\n            >\n              {{ confirmationButtonMessage }}\n            </button>\n            <button\n              *ngIf=\"!deleteButtonHidden\"\n              (click)=\"onUserDeletion()\"\n              type=\"button\"\n              nbButton\n              status=\"danger\"\n            >\n              Eliminar\n            </button>\n            <button\n              type=\"button\"\n              nbButton\n              status=\"warning\"\n              [routerLink]=\"[redirectOnCancelRoute]\"\n            >\n              Cancelar\n            </button>\n          </div>\n        </nb-card-body>\n      </nb-card>\n    </form>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'ngx-user-info-card',\n  templateUrl: './user-info-card.component.html',\n  styleUrls: ['./user-info-card.component.scss'],\n})\nexport class UserInfoCardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>user-info-card works!</p>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { NbThemeService } from '@nebular/theme';\nimport { GenericUser } from 'app/protected/interfaces/user/GenericUser.interface';\n\ntype ButtonFontSize = 'tiny' | 'small';\ntype CardFontSize = 'tiny' | 'large';\n\n@Component({\n  selector: 'ngx-users-cards',\n  templateUrl: './users-cards.component.html',\n  styleUrls: ['./users-cards.component.scss'],\n})\nexport class UsersCardsComponent implements OnInit  {\n  screenSizeBig: boolean = false;\n\n  constructor(private themeServiceService: NbThemeService) {}\n\n  ngOnInit(): void {\n    const $mediaQuery = this.themeServiceService.onMediaQueryChange();\n    $mediaQuery.subscribe((mediaBreakPoint) => {\n      const newValue = mediaBreakPoint[1];\n      if (newValue.width <= 576) this.screenSizeBig = false;\n      else this.screenSizeBig = true;\n    });\n  }\n\n  get buttonFontSize(): ButtonFontSize {\n    return this.screenSizeBig ? 'small' : 'tiny';\n  }\n\n  get cardFontSize(): CardFontSize {\n    return this.screenSizeBig ? 'large' : 'tiny';\n  }\n\n  @Input() users!: GenericUser[];\n\n  @Input() baseRoute: string;\n\n  @Input() cardTitle: string = 'Lista de usuarios';\n\n  @Input() buttonAction: string = 'Editar';\n}\n","<nb-card *ngIf=\"users; else loaderDiv\">\n  <nb-card-header>{{ cardTitle }}</nb-card-header>\n  <nb-card-body>\n    <nb-list>\n      <nb-list-item class=\"contact\" *ngFor=\"let user of users\">\n        <nb-user\n          [picture]=\"user | image\"\n          [name]=\"user.firstName + ' ' + user.lastName\"\n          [title]=\"user.mobileNumber\"\n          [size]=\"cardFontSize\"\n        ></nb-user>\n        <button\n          type=\"button\"\n          nbButton\n          outline\n          shape=\"semi-round\"\n          status=\"primary\"\n          [size]=\"buttonFontSize\"\n          [routerLink]=\"[baseRoute, user.id]\"\n        >\n          {{ buttonAction }}\n        </button>\n      </nb-list-item>\n    </nb-list>\n  </nb-card-body>\n</nb-card>\n\n<ng-template #loaderDiv>\n  <nb-card nbSpinner=\"true\" nbSpinnerSize=\"large\" nbSpinnerStatus=\"primary\">\n    <nb-card-body> Cargando usuarios... </nb-card-body></nb-card\n  >\n</ng-template>\n","import { GenericUser } from '../interfaces/user/GenericUser.interface';\r\n\r\nexport const UsersMock: GenericUser[] = [\r\n  {\r\n    firstName: 'John',\r\n    lastName: 'Doe',\r\n    mobileNumber: 76151052,\r\n    id: '609d963af2b3480c3ca1a05c',\r\n  },\r\n  {\r\n    firstName: 'Juan José',\r\n    lastName: 'Rojas',\r\n    mobileNumber: 76151054,\r\n    imageUrl: 'https://imagessl.casadellibro.com/img/autores/79825.jpg',\r\n    id: '609d9f8470c9882968722a68',\r\n  },\r\n  {\r\n    firstName: 'Juan Carlos',\r\n    lastName: 'Pérez Gómez',\r\n    mobileNumber: 76151056,\r\n    id: '60a06d297cb4874418473a90',\r\n  },\r\n  {\r\n    firstName: 'Luis',\r\n    lastName: 'Perez Gomez',\r\n    mobileNumber: 76151058,\r\n    id: '60a14a6d8f57c2430486de14',\r\n  },\r\n  {\r\n    firstName: 'Paciente Masculino',\r\n    lastName: 'Test 1',\r\n    mobileNumber: 77141761,\r\n    id: '60a99562bfc2d52f80c5db2c',\r\n  },\r\n];\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'ngx-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss'],\n})\nexport class DashboardComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<p>dashboard works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { NbMenuItem } from '@nebular/theme';\n\nimport { ActiveUserService } from 'app/auth/services/active-user.service';\nimport { ThemeChangerService } from 'app/shared/services/theme-changer.service';\nimport { adminMenuItems } from './sidebar-admin-menu';\nimport { doctorMenuItems } from './sidebar-doctor-menu';\n\n@Component({\n  selector: 'ngx-layout',\n  templateUrl: './layout.component.html',\n  styleUrls: ['./layout.component.scss'],\n})\nexport class LayoutComponent implements OnInit {\n  sidebarMenu: NbMenuItem[] = [];\n\n  constructor(\n    private activeUserService: ActiveUserService,\n    private themeChangerService: ThemeChangerService,\n  ) {}\n\n  ngOnInit(): void {\n    if (this.activeUserService.activeUserRole === 'USER_ADMIN_ROLE') {\n      this.themeChangerService.setDarkTheme();\n      this.sidebarMenu = adminMenuItems;\n    } else {\n      this.themeChangerService.setDefaultTheme();\n      this.sidebarMenu = doctorMenuItems;\n    }\n  }\n}\n","<ngx-one-column-layout>\n  <nb-menu [items]=\"sidebarMenu\"></nb-menu>\n  <router-outlet></router-outlet>\n</ngx-one-column-layout>\n","import { NbMenuItem } from '@nebular/theme';\r\nimport {\r\n  adminsRoutes,\r\n  bedsRoutes,\r\n  dashboardRoutes,\r\n  devicesRoutes,\r\n  doctorsRoutes,\r\n  patientsRoutes,\r\n  roomsRoutes,\r\n} from 'app/protected/routes/protected.routes';\r\n\r\nexport const adminMenuItems: NbMenuItem[] = [\r\n  {\r\n    title: 'Dashboard',\r\n    icon: 'home-outline',\r\n    link: dashboardRoutes.main,\r\n    home: true,\r\n  },\r\n  {\r\n    title: 'USUARIOS',\r\n    group: true,\r\n  },\r\n  {\r\n    title: 'Administradores',\r\n    icon: 'settings-2-outline',\r\n    children: [\r\n      {\r\n        title: 'Registrar nuevo administrador',\r\n        link: adminsRoutes.registration,\r\n      },\r\n      {\r\n        title: 'Ver administradores activos',\r\n        link: adminsRoutes.viewAll,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    title: 'Médicos',\r\n    icon: 'person-add-outline',\r\n    children: [\r\n      {\r\n        title: 'Registrar nuevo médico',\r\n        link: doctorsRoutes.registration,\r\n      },\r\n      {\r\n        title: 'Ver médicos activos',\r\n        link: doctorsRoutes.viewAll,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    title: 'REGISTROS CLÍNICOS',\r\n    group: true,\r\n  },\r\n  {\r\n    title: 'Pacientes',\r\n    icon: 'person-outline',\r\n    children: [\r\n      {\r\n        title: 'Registrar nuevo paciente',\r\n        link: patientsRoutes.registration,\r\n      },\r\n      {\r\n        title: 'Editar o eliminar pacientes',\r\n        link: patientsRoutes.viewAll,\r\n      },\r\n      {\r\n        title: 'Ver o agregar registros',\r\n        link: patientsRoutes.addRecords,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    title: 'INFRAESTRUCTURA',\r\n    group: true,\r\n  },\r\n  {\r\n    title: 'Habitaciones',\r\n    icon: 'home-outline',\r\n    children: [\r\n      {\r\n        title: 'Registrar nueva habitación',\r\n        link: roomsRoutes.registration,\r\n      },\r\n      {\r\n        title: 'Inspeccionar habitaciones',\r\n        link: roomsRoutes.inspect,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    title: 'Camas',\r\n    icon: 'thermometer-plus-outline',\r\n    children: [\r\n      {\r\n        title: 'Registrar nueva cama',\r\n        link: bedsRoutes.registration,\r\n      },\r\n      {\r\n        title: 'Inspeccionar camas',\r\n        link: bedsRoutes.inspect,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    title: 'IOT',\r\n    group: true,\r\n  },\r\n  {\r\n    title: 'Dispositivos',\r\n    icon: 'radio-outline',\r\n    children: [\r\n      {\r\n        title: 'Registrar nuevo dispositivo',\r\n        link: devicesRoutes.registration,\r\n      },\r\n      {\r\n        title: 'Inspeccionar dispositivos',\r\n        link: devicesRoutes.inspect,\r\n      },\r\n    ],\r\n  },\r\n];\r\n","import { NbMenuItem } from '@nebular/theme';\r\nimport {\r\n  dashboardRoutes,\r\n  devicesRoutes,\r\n  doctorsRoutes,\r\n  patientsRoutes,\r\n} from 'app/protected/routes/protected.routes';\r\n\r\nexport const doctorMenuItems: NbMenuItem[] = [\r\n  {\r\n    title: 'Dashboard',\r\n    icon: 'home-outline',\r\n    link: dashboardRoutes.main,\r\n    home: true,\r\n  },\r\n  {\r\n    title: 'USUARIOS',\r\n    group: true,\r\n  },\r\n  {\r\n    title: 'Médicos',\r\n    icon: 'person-add-outline',\r\n    children: [\r\n      {\r\n        title: 'Ver médicos activos',\r\n        link: doctorsRoutes.viewAll,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    title: 'REGISTROS CLÍNICOS',\r\n    group: true,\r\n  },\r\n  {\r\n    title: 'Pacientes',\r\n    icon: 'person-outline',\r\n    children: [\r\n      {\r\n        title: 'Registrar nuevo paciente',\r\n        link: patientsRoutes.registration,\r\n      },\r\n      {\r\n        title: 'Editar o eliminar pacientes',\r\n        link: patientsRoutes.viewAll,\r\n      },\r\n      {\r\n        title: 'Ver o agregar registros',\r\n        link: patientsRoutes.addRecords,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    title: 'IOT',\r\n    group: true,\r\n  },\r\n  {\r\n    title: 'Dispositivos',\r\n    icon: 'radio-outline',\r\n    children: [\r\n      {\r\n        title: 'Registrar nuevo dispositivo',\r\n        link: devicesRoutes.registration,\r\n      },\r\n      {\r\n        title: 'Inspeccionar dispositivos',\r\n        link: devicesRoutes.inspect,\r\n      },\r\n    ],\r\n  },\r\n];\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { DashboardComponent } from './pages/dashboard/dashboard.component';\nimport { LayoutComponent } from './pages/layout/layout.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LayoutComponent,\n    children: [\n      {\n        path: 'dashboard',\n        component: DashboardComponent,\n      },\n      {\n        path: 'admins',\n        loadChildren: () =>\n          import('./pages/admins/admins.module').then((m) => m.AdminsModule),\n      },\n      {\n        path: 'doctors',\n        loadChildren: () =>\n          import('./pages/doctors/doctors.module').then((m) => m.DoctorsModule),\n      },\n      {\n        path: 'patients',\n        loadChildren: () =>\n          import('./pages/patients/patients.module').then((m) => m.PatientsModule),\n      },\n      {\n        path: '**',\n        redirectTo: 'dashboard',\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ProtectedRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { NbMenuModule } from '@nebular/theme';\nimport { ThemeModule } from '../@theme/theme.module';\n\nimport { ProtectedRoutingModule } from './protected-routing.module';\n\nimport { NebularModule } from 'app/shared/nebular/nebular.module';\nimport { SharedModule } from 'app/shared/shared.module';\n\nimport { DashboardComponent } from './pages/dashboard/dashboard.component';\nimport { LayoutComponent } from './pages/layout/layout.component';\nimport { UserFormComponent } from './components/user-form/user-form.component';\nimport { InputImgComponent } from './components/input-img/input-img.component';\nimport { UsersCardsComponent } from './components/users-cards/users-cards.component';\nimport { FilterBarComponent } from './components/filter-bar/filter-bar.component';\nimport { PatientFormComponent } from './components/patient-form/patient-form.component';\nimport { RecordsCardsComponent } from './components/records-cards/records-cards.component';\nimport { UserInfoCardComponent } from './components/user-info-card/user-info-card.component';\nimport { SimpleDatePickerComponent } from './components/simple-date-picker/simple-date-picker.component';\nimport { SimpleTextAreaComponent } from './components/simple-text-area/simple-text-area.component';\nimport { PatientInfoCardComponent } from './components/patient-info-card/patient-info-card.component';\nimport { SimpleRecordComponent } from './components/simple-record/simple-record.component';\n\n@NgModule({\n  declarations: [\n    DashboardComponent,\n    FilterBarComponent,\n    InputImgComponent,\n    LayoutComponent,\n    PatientFormComponent,\n    PatientInfoCardComponent,\n    RecordsCardsComponent,\n    SimpleDatePickerComponent,\n    SimpleTextAreaComponent,\n    UserFormComponent,\n    UserInfoCardComponent,\n    UsersCardsComponent,\n    SimpleRecordComponent,\n  ],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormsModule,\n    RouterModule,\n    ProtectedRoutingModule,\n    NbMenuModule,\n    ThemeModule,\n    NebularModule,\n    SharedModule,\n  ],\n  exports: [\n    FilterBarComponent,\n    InputImgComponent,\n    PatientFormComponent,\n    PatientInfoCardComponent,\n    RecordsCardsComponent,\n    SimpleDatePickerComponent,\n    SimpleTextAreaComponent,\n    UserFormComponent,\n    UserInfoCardComponent,\n    UsersCardsComponent,\n    SimpleRecordComponent,\n  ],\n})\nexport class ProtectedModule {}\n","import { Injectable } from '@angular/core';\nimport { NbDialogRef, NbDialogService } from '@nebular/theme';\n\nimport { UserDeletionConfirmationComponent } from '../components/user-deletion-confirmation/user-deletion-confirmation.component';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DialogService {\n  constructor(private dialogService: NbDialogService) {}\n\n  deletionConfirmationDialog(): NbDialogRef<UserDeletionConfirmationComponent> {\n    return this.dialogService.open(UserDeletionConfirmationComponent);\n  }\n}\n","export const toBase64URI = (file: File) => {\r\n  return new Promise<any>((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => resolve(reader.result);\r\n    reader.onerror = (error) => reject(error);\r\n  });\r\n};\r\n"]}